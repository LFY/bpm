convert ~/bpm/church/experiments/param-tree.png ~/Dropbox/bmm/param-tree.pdfprior:  -870
"likelihood for program:"
(let ()
  (lambda ()
    (uniform-choice
      (node (data (color (gaussian 13.0 25)) (size 0.3))
        (node (data (color (gaussian 59.0 25)) (size 0.3)))
        (node (data (color (gaussian -0.0 25)) (size 0.3))))
      (node (data (color (gaussian 217.0 25)) (size 0.3))
        (node (data (color (gaussian 168.0 25)) (size 0.3)))
        (node (data (color (gaussian 221.0 25)) (size 0.3))))
      (node (data (color (gaussian 21.0 25)) (size 1))
        (node (data (color (gaussian 103.0 25)) (size 0.1))
          (node
            (data (color (gaussian 124.0 25)) (size 0.1))
            (node
              (data (color (gaussian 93.0 25)) (size 0.1))
              (node
                (data (color (gaussian 125.0 25)) (size 0.1))
                (node
                  (data (color (gaussian 84.0 25))
                    (size 0.1))
                  (node
                    (data (color (gaussian 81.0 25))
                      (size 0.1))
                    (node
                      (data (color (gaussian 63.0 25))
                        (size 0.1))
                      (node
                        (data (color (gaussian 82.0 25))
                          (size 0.1))
                        (node
                          (data (color (gaussian 1e2 25))
                            (size 0.1))
                          (node
                            (data (color (gaussian 66.0 25))
                              (size 0.1))
                            (node
                              (data
                                (color (gaussian 47.0 25))
                                (size 0.1))
                              (node
                                (data
                                  (color (gaussian -12.0 25))
                                  (size 0.3))
                                (node
                                  (data
                                    (color
                                      (gaussian -22.0 25))
                                    (size 0.3)))
                                (node
                                  (data
                                    (color
                                      (gaussian 19.0 25))
                                    (size 0.3)))))))))))))))
        (node (data (color (gaussian 131.0 25)) (size 0.1))
          (node
            (data (color (gaussian 126.0 25)) (size 0.1))
            (node
              (data (color (gaussian 8e1 25)) (size 0.1))
              (node
                (data (color (gaussian 140.0 25)) (size 0.1))
                (node
                  (data (color (gaussian 87.0 25))
                    (size 0.1))
                  (node
                    (data (color (gaussian 118.0 25))
                      (size 0.1))
                    (node
                      (data (color (gaussian 81.0 25))
                        (size 0.1))
                      (node
                        (data (color (gaussian 102.0 25))
                          (size 0.1))
                        (node
                          (data (color (gaussian 110.0 25))
                            (size 0.1))
                          (node
                            (data
                              (color (gaussian 133.0 25))
                              (size 0.1))
                            (node
                              (data
                                (color (gaussian 96.0 25))
                                (size 0.1))
                              (node
                                (data
                                  (color (gaussian 117.0 25))
                                  (size 0.1))
                                (node
                                  (data
                                    (color
                                      (gaussian 240.0 25))
                                    (size 0.3))
                                  (node
                                    (data
                                      (color
                                        (gaussian 221.0 25))
                                      (size 0.3)))
                                  (node
                                    (data
                                      (color
                                        (gaussian 217.0 25))
                                      (size 0.3))))))))))))))))))))
/tmp/tree-0.291987428652.png
/tmp/tree-1.291987428652.png
/tmp/tree-2.291987428652.png
likelihood:(-1.0986122886681098)|(-124.13398834735821)|-125.23260063602632

prior:  -870
"likelihood for program:"
(let ()
  (lambda ()
    (uniform-choice
      (node (data (color (gaussian 13.0 25)) (size 0.3))
        (node (data (color (gaussian 59.0 25)) (size 0.3)))
        (node (data (color (gaussian -0.0 25)) (size 0.3))))
      (node (data (color (gaussian 217.0 25)) (size 0.3))
        (node (data (color (gaussian 168.0 25)) (size 0.3)))
        (node (data (color (gaussian 221.0 25)) (size 0.3))))
      (node (data (color (gaussian 21.0 25)) (size 1))
        (node (data (color (gaussian 103.0 25)) (size 0.1))
          (node
            (data (color (gaussian 124.0 25)) (size 0.1))
            (node
              (data (color (gaussian 93.0 25)) (size 0.1))
              (node
                (data (color (gaussian 125.0 25)) (size 0.1))
                (node
                  (data (color (gaussian 84.0 25))
                    (size 0.1))
                  (node
                    (data (color (gaussian 81.0 25))
                      (size 0.1))
                    (node
                      (data (color (gaussian 63.0 25))
                        (size 0.1))
                      (node
                        (data (color (gaussian 82.0 25))
                          (size 0.1))
                        (node
                          (data (color (gaussian 1e2 25))
                            (size 0.1))
                          (node
                            (data (color (gaussian 66.0 25))
                              (size 0.1))
                            (node
                              (data
                                (color (gaussian 47.0 25))
                                (size 0.1))
                              (node
                                (data
                                  (color (gaussian -12.0 25))
                                  (size 0.3))
                                (node
                                  (data
                                    (color
                                      (gaussian -22.0 25))
                                    (size 0.3)))
                                (node
                                  (data
                                    (color
                                      (gaussian 19.0 25))
                                    (size 0.3)))))))))))))))
        (node (data (color (gaussian 131.0 25)) (size 0.1))
          (node
            (data (color (gaussian 126.0 25)) (size 0.1))
            (node
              (data (color (gaussian 8e1 25)) (size 0.1))
              (node
                (data (color (gaussian 140.0 25)) (size 0.1))
                (node
                  (data (color (gaussian 87.0 25))
                    (size 0.1))
                  (node
                    (data (color (gaussian 118.0 25))
                      (size 0.1))
                    (node
                      (data (color (gaussian 81.0 25))
                        (size 0.1))
                      (node
                        (data (color (gaussian 102.0 25))
                          (size 0.1))
                        (node
                          (data (color (gaussian 110.0 25))
                            (size 0.1))
                          (node
                            (data
                              (color (gaussian 133.0 25))
                              (size 0.1))
                            (node
                              (data
                                (color (gaussian 96.0 25))
                                (size 0.1))
                              (node
                                (data
                                  (color (gaussian 117.0 25))
                                  (size 0.1))
                                (node
                                  (data
                                    (color
                                      (gaussian 240.0 25))
                                    (size 0.3))
                                  (node
                                    (data
                                      (color
                                        (gaussian 221.0 25))
                                      (size 0.3)))
                                  (node
                                    (data
                                      (color
                                        (gaussian 217.0 25))
                                      (size 0.3))))))))))))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-12.413398834735817 -94.28379883473582)|-13.512011123403926

prior:  -870
"likelihood for program:"
(let ()
  (lambda ()
    (uniform-choice
      (node (data (color (gaussian 13.0 25)) (size 0.3))
        (node (data (color (gaussian 59.0 25)) (size 0.3)))
        (node (data (color (gaussian -0.0 25)) (size 0.3))))
      (node (data (color (gaussian 217.0 25)) (size 0.3))
        (node (data (color (gaussian 168.0 25)) (size 0.3)))
        (node (data (color (gaussian 221.0 25)) (size 0.3))))
      (node (data (color (gaussian 21.0 25)) (size 1))
        (node (data (color (gaussian 103.0 25)) (size 0.1))
          (node
            (data (color (gaussian 124.0 25)) (size 0.1))
            (node
              (data (color (gaussian 93.0 25)) (size 0.1))
              (node
                (data (color (gaussian 125.0 25)) (size 0.1))
                (node
                  (data (color (gaussian 84.0 25))
                    (size 0.1))
                  (node
                    (data (color (gaussian 81.0 25))
                      (size 0.1))
                    (node
                      (data (color (gaussian 63.0 25))
                        (size 0.1))
                      (node
                        (data (color (gaussian 82.0 25))
                          (size 0.1))
                        (node
                          (data (color (gaussian 1e2 25))
                            (size 0.1))
                          (node
                            (data (color (gaussian 66.0 25))
                              (size 0.1))
                            (node
                              (data
                                (color (gaussian 47.0 25))
                                (size 0.1))
                              (node
                                (data
                                  (color (gaussian -12.0 25))
                                  (size 0.3))
                                (node
                                  (data
                                    (color
                                      (gaussian -22.0 25))
                                    (size 0.3)))
                                (node
                                  (data
                                    (color
                                      (gaussian 19.0 25))
                                    (size 0.3)))))))))))))))
        (node (data (color (gaussian 131.0 25)) (size 0.1))
          (node
            (data (color (gaussian 126.0 25)) (size 0.1))
            (node
              (data (color (gaussian 8e1 25)) (size 0.1))
              (node
                (data (color (gaussian 140.0 25)) (size 0.1))
                (node
                  (data (color (gaussian 87.0 25))
                    (size 0.1))
                  (node
                    (data (color (gaussian 118.0 25))
                      (size 0.1))
                    (node
                      (data (color (gaussian 81.0 25))
                        (size 0.1))
                      (node
                        (data (color (gaussian 102.0 25))
                          (size 0.1))
                        (node
                          (data (color (gaussian 110.0 25))
                            (size 0.1))
                          (node
                            (data
                              (color (gaussian 133.0 25))
                              (size 0.1))
                            (node
                              (data
                                (color (gaussian 96.0 25))
                                (size 0.1))
                              (node
                                (data
                                  (color (gaussian 117.0 25))
                                  (size 0.1))
                                (node
                                  (data
                                    (color
                                      (gaussian 240.0 25))
                                    (size 0.3))
                                  (node
                                    (data
                                      (color
                                        (gaussian 221.0 25))
                                      (size 0.3)))
                                  (node
                                    (data
                                      (color
                                        (gaussian 217.0 25))
                                      (size 0.3))))))))))))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-94.28379883473582 -12.413398834735817)|-13.512011123403926

CURRENT DEPTH: 10 SIZE: -870 SEMANTICS PRESERVED: #f  

(let ()
  (lambda ()
    (uniform-choice
      (node (data (color (gaussian 13.0 25)) (size 0.3))
        (node (data (color (gaussian 59.0 25)) (size 0.3)))
        (node (data (color (gaussian -0.0 25)) (size 0.3))))
      (node (data (color (gaussian 217.0 25)) (size 0.3))
        (node (data (color (gaussian 168.0 25)) (size 0.3)))
        (node (data (color (gaussian 221.0 25)) (size 0.3))))
      (node (data (color (gaussian 21.0 25)) (size 1))
        (node (data (color (gaussian 103.0 25)) (size 0.1))
          (node
            (data (color (gaussian 124.0 25)) (size 0.1))
            (node
              (data (color (gaussian 93.0 25)) (size 0.1))
              (node
                (data (color (gaussian 125.0 25)) (size 0.1))
                (node
                  (data (color (gaussian 84.0 25))
                    (size 0.1))
                  (node
                    (data (color (gaussian 81.0 25))
                      (size 0.1))
                    (node
                      (data (color (gaussian 63.0 25))
                        (size 0.1))
                      (node
                        (data (color (gaussian 82.0 25))
                          (size 0.1))
                        (node
                          (data (color (gaussian 1e2 25))
                            (size 0.1))
                          (node
                            (data (color (gaussian 66.0 25))
                              (size 0.1))
                            (node
                              (data
                                (color (gaussian 47.0 25))
                                (size 0.1))
                              (node
                                (data
                                  (color (gaussian -12.0 25))
                                  (size 0.3))
                                (node
                                  (data
                                    (color
                                      (gaussian -22.0 25))
                                    (size 0.3)))
                                (node
                                  (data
                                    (color
                                      (gaussian 19.0 25))
                                    (size 0.3)))))))))))))))
        (node (data (color (gaussian 131.0 25)) (size 0.1))
          (node
            (data (color (gaussian 126.0 25)) (size 0.1))
            (node
              (data (color (gaussian 8e1 25)) (size 0.1))
              (node
                (data (color (gaussian 140.0 25)) (size 0.1))
                (node
                  (data (color (gaussian 87.0 25))
                    (size 0.1))
                  (node
                    (data (color (gaussian 118.0 25))
                      (size 0.1))
                    (node
                      (data (color (gaussian 81.0 25))
                        (size 0.1))
                      (node
                        (data (color (gaussian 102.0 25))
                          (size 0.1))
                        (node
                          (data (color (gaussian 110.0 25))
                            (size 0.1))
                          (node
                            (data
                              (color (gaussian 133.0 25))
                              (size 0.1))
                            (node
                              (data
                                (color (gaussian 96.0 25))
                                (size 0.1))
                              (node
                                (data
                                  (color (gaussian 117.0 25))
                                  (size 0.1))
                                (node
                                  (data
                                    (color
                                      (gaussian 240.0 25))
                                    (size 0.3))
                                  (node
                                    (data
                                      (color
                                        (gaussian 221.0 25))
                                      (size 0.3)))
                                  (node
                                    (data
                                      (color
                                        (gaussian 217.0 25))
                                      (size 0.3))))))))))))))))))))
("log-priors and log-likelihoods: "
  ((-459 -152.25662288283417 -611.2566228828341 #t)
    (-483 -152.25662288283417 -635.2566228828341 #t)
    (-492 -152.25662288283417 -644.2566228828341 #t)
    (-525 -152.25662288283417 -677.2566228828341 #t)
    (-546 -152.25662288283417 -698.2566228828341 #t)
    (-564 -152.25662288283417 -716.2566228828341 #t)
    (-585 -152.25662288283417 -737.2566228828341 #t)
    (-618 -152.25662288283417 -770.2566228828341 #t)
    (-636 -152.25662288283417 -788.2566228828341 #t)
    (-648 -152.25662288283417 -800.2566228828341 #t)
    (-654 -152.25662288283417 -806.2566228828341 #t)
    (-666 -152.25662288283417 -818.2566228828341 #t)
    (-672 -152.25662288283417 -824.2566228828341 #t)
    (-681 -152.25662288283417 -833.2566228828341 #t)
    (-690 -152.25662288283417 -842.2566228828341 #t)
    (-699 -152.25662288283417 -851.2566228828341 #t)
    (-702 -152.25662288283417 -854.2566228828341 #t)
    (-708 -152.25662288283417 -860.2566228828341 #t)
    (-711 -152.25662288283417 -863.2566228828341 #t)
    (-717 -152.25662288283417 -869.2566228828341 #t)
    (-732 -152.25662288283417 -884.2566228828341 #t)
    (-735 -152.25662288283417 -887.2566228828341 #t)
    (-750 -152.25662288283417 -902.2566228828341 #t)
    (-750 -152.25662288283417 -902.2566228828341 #t)
    (-753 -152.25662288283417 -905.2566228828341 #t)
    (-768 -152.25662288283417 -920.2566228828341 #t)
    (-771 -152.25662288283417 -923.2566228828341 #t)
    (-786 -152.25662288283417 -938.2566228828341 #t)
    (-804 -152.25662288283417 -956.2566228828341 #t)
    (-807 -152.25662288283417 -959.2566228828341 #t)
    (-825 -152.25662288283417 -977.2566228828341 #t)
    (-840 -152.25662288283417 -992.2566228828341 #t)
    (-852 -152.25662288283417 -1004.2566228828341 #t)
    (-855 -152.25662288283417 -1007.2566228828341 #t)
    (-855 -152.25662288283417 -1007.2566228828341 #t)
    (-855 -152.25662288283417 -1007.2566228828341 #t)
    (-864 -152.25662288283417 -1016.2566228828341 #t)
    (-864 -152.25662288283417 -1016.2566228828341 #t)
    (-864 -152.25662288283417 -1016.2566228828341 #t)
    (-867 -152.25662288283417 -1019.2566228828341 #t)
    (-867 -152.25662288283417 -1019.2566228828341 #t)
    (-867 -152.25662288283417 -1019.2566228828341 #t)
    (-870 -152.25662288283417 -1022.2566228828341 #t)))
CURRENT DEPTH: 9 SIZE: -459 SEMANTICS PRESERVED: #t  

(let ()
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice
      (node (F1 13.0 0.3) (node (F1 59.0 0.3))
        (node (F1 -0.0 0.3)))
      (node (F1 217.0 0.3) (node (F1 168.0 0.3))
        (node (F1 221.0 0.3)))
      (node (F1 21.0 1)
        (node (F1 103.0 0.1)
          (node (F1 124.0 0.1)
            (node (F1 93.0 0.1)
              (node (F1 125.0 0.1)
                (node (F1 84.0 0.1)
                  (node (F1 81.0 0.1)
                    (node (F1 63.0 0.1)
                      (node (F1 82.0 0.1)
                        (node (F1 1e2 0.1)
                          (node (F1 66.0 0.1)
                            (node (F1 47.0 0.1)
                              (node (F1 -12.0 0.3)
                                (node (F1 -22.0 0.3))
                                (node (F1 19.0 0.3))))))))))))))
        (node (F1 131.0 0.1)
          (node (F1 126.0 0.1)
            (node (F1 8e1 0.1)
              (node (F1 140.0 0.1)
                (node (F1 87.0 0.1)
                  (node (F1 118.0 0.1)
                    (node (F1 81.0 0.1)
                      (node (F1 102.0 0.1)
                        (node (F1 110.0 0.1)
                          (node (F1 133.0 0.1)
                            (node (F1 96.0 0.1)
                              (node (F1 117.0 0.1)
                                (node (F1 240.0 0.3)
                                  (node (F1 221.0 0.3))
                                  (node (F1 217.0 0.3)))))))))))))))))))
prior:  -360
"likelihood for program:"
(let ()
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        V1)))
  (lambda ()
    (uniform-choice
      (node (F1 13.0) (node (F1 59.0)) (node (F1 -0.0)))
      (node (F1 217.0) (node (F1 168.0)) (node (F1 221.0)))
      (node (F1 21.0)
        (node (F1 103.0)
          (node (F1 124.0)
            (node (F1 93.0)
              (node (F1 125.0)
                (node (F1 84.0)
                  (node (F1 81.0)
                    (node (F1 63.0)
                      (node (F1 82.0)
                        (node (F1 1e2)
                          (node (F1 66.0)
                            (node (F1 47.0)
                              (node (F1 -12.0)
                                (node (F1 -22.0))
                                (node (F1 19.0))))))))))))))
        (node (F1 131.0)
          (node (F1 126.0)
            (node (F1 8e1)
              (node (F1 140.0)
                (node (F1 87.0)
                  (node (F1 118.0)
                    (node (F1 81.0)
                      (node (F1 102.0)
                        (node (F1 110.0)
                          (node (F1 133.0)
                            (node (F1 96.0)
                              (node (F1 117.0)
                                (node (F1 240.0)
                                  (node (F1 221.0))
                                  (node (F1 217.0)))))))))))))))))))
likelihood:(-1.0986122886681098)|(-inf.0)|-inf.0

prior:  -360
"likelihood for program:"
(let ()
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        V1)))
  (lambda ()
    (uniform-choice
      (node (F1 13.0) (node (F1 59.0)) (node (F1 -0.0)))
      (node (F1 217.0) (node (F1 168.0)) (node (F1 221.0)))
      (node (F1 21.0)
        (node (F1 103.0)
          (node (F1 124.0)
            (node (F1 93.0)
              (node (F1 125.0)
                (node (F1 84.0)
                  (node (F1 81.0)
                    (node (F1 63.0)
                      (node (F1 82.0)
                        (node (F1 1e2)
                          (node (F1 66.0)
                            (node (F1 47.0)
                              (node (F1 -12.0)
                                (node (F1 -22.0))
                                (node (F1 19.0))))))))))))))
        (node (F1 131.0)
          (node (F1 126.0)
            (node (F1 8e1)
              (node (F1 140.0)
                (node (F1 87.0)
                  (node (F1 118.0)
                    (node (F1 81.0)
                      (node (F1 102.0)
                        (node (F1 110.0)
                          (node (F1 133.0)
                            (node (F1 96.0)
                              (node (F1 117.0)
                                (node (F1 240.0)
                                  (node (F1 221.0))
                                  (node (F1 217.0)))))))))))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-inf.0 -inf.0)|-inf.0

prior:  -360
"likelihood for program:"
(let ()
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        V1)))
  (lambda ()
    (uniform-choice
      (node (F1 13.0) (node (F1 59.0)) (node (F1 -0.0)))
      (node (F1 217.0) (node (F1 168.0)) (node (F1 221.0)))
      (node (F1 21.0)
        (node (F1 103.0)
          (node (F1 124.0)
            (node (F1 93.0)
              (node (F1 125.0)
                (node (F1 84.0)
                  (node (F1 81.0)
                    (node (F1 63.0)
                      (node (F1 82.0)
                        (node (F1 1e2)
                          (node (F1 66.0)
                            (node (F1 47.0)
                              (node (F1 -12.0)
                                (node (F1 -22.0))
                                (node (F1 19.0))))))))))))))
        (node (F1 131.0)
          (node (F1 126.0)
            (node (F1 8e1)
              (node (F1 140.0)
                (node (F1 87.0)
                  (node (F1 118.0)
                    (node (F1 81.0)
                      (node (F1 102.0)
                        (node (F1 110.0)
                          (node (F1 133.0)
                            (node (F1 96.0)
                              (node (F1 117.0)
                                (node (F1 240.0)
                                  (node (F1 221.0))
                                  (node (F1 217.0)))))))))))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-inf.0 -inf.0)|-inf.0

prior:  -360
"likelihood for program:"
(let ()
  (define F1
    (lambda (V2)
      ((lambda (V1)
         (data (color (gaussian V1 25)) (size V2)))
        V2)))
  (lambda ()
    (uniform-choice
      (node (F1 0.3) (node (F1 0.3)) (node (F1 0.3)))
      (node (F1 0.3) (node (F1 0.3)) (node (F1 0.3)))
      (node (F1 1)
        (node (F1 0.1)
          (node (F1 0.1)
            (node (F1 0.1)
              (node (F1 0.1)
                (node (F1 0.1)
                  (node (F1 0.1)
                    (node (F1 0.1)
                      (node (F1 0.1)
                        (node (F1 0.1)
                          (node (F1 0.1)
                            (node (F1 0.1)
                              (node (F1 0.3) (node (F1 0.3))
                                (node (F1 0.3))))))))))))))
        (node (F1 0.1)
          (node (F1 0.1)
            (node (F1 0.1)
              (node (F1 0.1)
                (node (F1 0.1)
                  (node (F1 0.1)
                    (node (F1 0.1)
                      (node (F1 0.1)
                        (node (F1 0.1)
                          (node (F1 0.1)
                            (node (F1 0.1)
                              (node (F1 0.1)
                                (node (F1 0.3)
                                  (node (F1 0.3))
                                  (node (F1 0.3)))))))))))))))))))
likelihood:(-1.0986122886681098)|(-440.44372434735817)|-441.5423366360263

prior:  -360
"likelihood for program:"
(let ()
  (define F1
    (lambda (V2)
      ((lambda (V1)
         (data (color (gaussian V1 25)) (size V2)))
        V2)))
  (lambda ()
    (uniform-choice
      (node (F1 0.3) (node (F1 0.3)) (node (F1 0.3)))
      (node (F1 0.3) (node (F1 0.3)) (node (F1 0.3)))
      (node (F1 1)
        (node (F1 0.1)
          (node (F1 0.1)
            (node (F1 0.1)
              (node (F1 0.1)
                (node (F1 0.1)
                  (node (F1 0.1)
                    (node (F1 0.1)
                      (node (F1 0.1)
                        (node (F1 0.1)
                          (node (F1 0.1)
                            (node (F1 0.1)
                              (node (F1 0.3) (node (F1 0.3))
                                (node (F1 0.3))))))))))))))
        (node (F1 0.1)
          (node (F1 0.1)
            (node (F1 0.1)
              (node (F1 0.1)
                (node (F1 0.1)
                  (node (F1 0.1)
                    (node (F1 0.1)
                      (node (F1 0.1)
                        (node (F1 0.1)
                          (node (F1 0.1)
                            (node (F1 0.1)
                              (node (F1 0.1)
                                (node (F1 0.3)
                                  (node (F1 0.3))
                                  (node (F1 0.3)))))))))))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-111.44593483473582 -111.44593483473582)|-111.85139994284398

prior:  -360
"likelihood for program:"
(let ()
  (define F1
    (lambda (V2)
      ((lambda (V1)
         (data (color (gaussian V1 25)) (size V2)))
        V2)))
  (lambda ()
    (uniform-choice
      (node (F1 0.3) (node (F1 0.3)) (node (F1 0.3)))
      (node (F1 0.3) (node (F1 0.3)) (node (F1 0.3)))
      (node (F1 1)
        (node (F1 0.1)
          (node (F1 0.1)
            (node (F1 0.1)
              (node (F1 0.1)
                (node (F1 0.1)
                  (node (F1 0.1)
                    (node (F1 0.1)
                      (node (F1 0.1)
                        (node (F1 0.1)
                          (node (F1 0.1)
                            (node (F1 0.1)
                              (node (F1 0.3) (node (F1 0.3))
                                (node (F1 0.3))))))))))))))
        (node (F1 0.1)
          (node (F1 0.1)
            (node (F1 0.1)
              (node (F1 0.1)
                (node (F1 0.1)
                  (node (F1 0.1)
                    (node (F1 0.1)
                      (node (F1 0.1)
                        (node (F1 0.1)
                          (node (F1 0.1)
                            (node (F1 0.1)
                              (node (F1 0.1)
                                (node (F1 0.3)
                                  (node (F1 0.3))
                                  (node (F1 0.3)))))))))))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-15.29905483473582 -15.29905483473582)|-15.704519942843985

prior:  -360
"likelihood for program:"
(let ()
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.19166666666666654)))
  (lambda ()
    (uniform-choice
      (node (F1 13.0) (node (F1 59.0)) (node (F1 -0.0)))
      (node (F1 217.0) (node (F1 168.0)) (node (F1 221.0)))
      (node (F1 21.0)
        (node (F1 103.0)
          (node (F1 124.0)
            (node (F1 93.0)
              (node (F1 125.0)
                (node (F1 84.0)
                  (node (F1 81.0)
                    (node (F1 63.0)
                      (node (F1 82.0)
                        (node (F1 1e2)
                          (node (F1 66.0)
                            (node (F1 47.0)
                              (node (F1 -12.0)
                                (node (F1 -22.0))
                                (node (F1 19.0))))))))))))))
        (node (F1 131.0)
          (node (F1 126.0)
            (node (F1 8e1)
              (node (F1 140.0)
                (node (F1 87.0)
                  (node (F1 118.0)
                    (node (F1 81.0)
                      (node (F1 102.0)
                        (node (F1 110.0)
                          (node (F1 133.0)
                            (node (F1 96.0)
                              (node (F1 117.0)
                                (node (F1 240.0)
                                  (node (F1 221.0))
                                  (node (F1 217.0)))))))))))))))))))
likelihood:(-1.0986122886681098)|(-inf.0)|-inf.0

prior:  -360
"likelihood for program:"
(let ()
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.19166666666666654)))
  (lambda ()
    (uniform-choice
      (node (F1 13.0) (node (F1 59.0)) (node (F1 -0.0)))
      (node (F1 217.0) (node (F1 168.0)) (node (F1 221.0)))
      (node (F1 21.0)
        (node (F1 103.0)
          (node (F1 124.0)
            (node (F1 93.0)
              (node (F1 125.0)
                (node (F1 84.0)
                  (node (F1 81.0)
                    (node (F1 63.0)
                      (node (F1 82.0)
                        (node (F1 1e2)
                          (node (F1 66.0)
                            (node (F1 47.0)
                              (node (F1 -12.0)
                                (node (F1 -22.0))
                                (node (F1 19.0))))))))))))))
        (node (F1 131.0)
          (node (F1 126.0)
            (node (F1 8e1)
              (node (F1 140.0)
                (node (F1 87.0)
                  (node (F1 118.0)
                    (node (F1 81.0)
                      (node (F1 102.0)
                        (node (F1 110.0)
                          (node (F1 133.0)
                            (node (F1 96.0)
                              (node (F1 117.0)
                                (node (F1 240.0)
                                  (node (F1 221.0))
                                  (node (F1 217.0)))))))))))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-inf.0 -inf.0)|-inf.0

prior:  -360
"likelihood for program:"
(let ()
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.19166666666666654)))
  (lambda ()
    (uniform-choice
      (node (F1 13.0) (node (F1 59.0)) (node (F1 -0.0)))
      (node (F1 217.0) (node (F1 168.0)) (node (F1 221.0)))
      (node (F1 21.0)
        (node (F1 103.0)
          (node (F1 124.0)
            (node (F1 93.0)
              (node (F1 125.0)
                (node (F1 84.0)
                  (node (F1 81.0)
                    (node (F1 63.0)
                      (node (F1 82.0)
                        (node (F1 1e2)
                          (node (F1 66.0)
                            (node (F1 47.0)
                              (node (F1 -12.0)
                                (node (F1 -22.0))
                                (node (F1 19.0))))))))))))))
        (node (F1 131.0)
          (node (F1 126.0)
            (node (F1 8e1)
              (node (F1 140.0)
                (node (F1 87.0)
                  (node (F1 118.0)
                    (node (F1 81.0)
                      (node (F1 102.0)
                        (node (F1 110.0)
                          (node (F1 133.0)
                            (node (F1 96.0)
                              (node (F1 117.0)
                                (node (F1 240.0)
                                  (node (F1 221.0))
                                  (node (F1 217.0)))))))))))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-inf.0 -inf.0)|-inf.0

prior:  -360
"likelihood for program:"
(let ()
  (define F1
    (lambda (V2)
      ((lambda (V1)
         (data (color (gaussian V1 25)) (size V2)))
        101.41666666666667)))
  (lambda ()
    (uniform-choice
      (node (F1 0.3) (node (F1 0.3)) (node (F1 0.3)))
      (node (F1 0.3) (node (F1 0.3)) (node (F1 0.3)))
      (node (F1 1)
        (node (F1 0.1)
          (node (F1 0.1)
            (node (F1 0.1)
              (node (F1 0.1)
                (node (F1 0.1)
                  (node (F1 0.1)
                    (node (F1 0.1)
                      (node (F1 0.1)
                        (node (F1 0.1)
                          (node (F1 0.1)
                            (node (F1 0.1)
                              (node (F1 0.3) (node (F1 0.3))
                                (node (F1 0.3))))))))))))))
        (node (F1 0.1)
          (node (F1 0.1)
            (node (F1 0.1)
              (node (F1 0.1)
                (node (F1 0.1)
                  (node (F1 0.1)
                    (node (F1 0.1)
                      (node (F1 0.1)
                        (node (F1 0.1)
                          (node (F1 0.1)
                            (node (F1 0.1)
                              (node (F1 0.1)
                                (node (F1 0.3)
                                  (node (F1 0.3))
                                  (node (F1 0.3)))))))))))))))))))
likelihood:(-1.0986122886681098)|(-205.58975501402483)|-206.68836730269294

prior:  -360
"likelihood for program:"
(let ()
  (define F1
    (lambda (V2)
      ((lambda (V1)
         (data (color (gaussian V1 25)) (size V2)))
        101.41666666666667)))
  (lambda ()
    (uniform-choice
      (node (F1 0.3) (node (F1 0.3)) (node (F1 0.3)))
      (node (F1 0.3) (node (F1 0.3)) (node (F1 0.3)))
      (node (F1 1)
        (node (F1 0.1)
          (node (F1 0.1)
            (node (F1 0.1)
              (node (F1 0.1)
                (node (F1 0.1)
                  (node (F1 0.1)
                    (node (F1 0.1)
                      (node (F1 0.1)
                        (node (F1 0.1)
                          (node (F1 0.1)
                            (node (F1 0.1)
                              (node (F1 0.3) (node (F1 0.3))
                                (node (F1 0.3))))))))))))))
        (node (F1 0.1)
          (node (F1 0.1)
            (node (F1 0.1)
              (node (F1 0.1)
                (node (F1 0.1)
                  (node (F1 0.1)
                    (node (F1 0.1)
                      (node (F1 0.1)
                        (node (F1 0.1)
                          (node (F1 0.1)
                            (node (F1 0.1)
                              (node (F1 0.1)
                                (node (F1 0.3)
                                  (node (F1 0.3))
                                  (node (F1 0.3)))))))))))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-38.08781550140248 -38.08781550140248)|-38.49328060951064

prior:  -360
"likelihood for program:"
(let ()
  (define F1
    (lambda (V2)
      ((lambda (V1)
         (data (color (gaussian V1 25)) (size V2)))
        101.41666666666667)))
  (lambda ()
    (uniform-choice
      (node (F1 0.3) (node (F1 0.3)) (node (F1 0.3)))
      (node (F1 0.3) (node (F1 0.3)) (node (F1 0.3)))
      (node (F1 1)
        (node (F1 0.1)
          (node (F1 0.1)
            (node (F1 0.1)
              (node (F1 0.1)
                (node (F1 0.1)
                  (node (F1 0.1)
                    (node (F1 0.1)
                      (node (F1 0.1)
                        (node (F1 0.1)
                          (node (F1 0.1)
                            (node (F1 0.1)
                              (node (F1 0.3) (node (F1 0.3))
                                (node (F1 0.3))))))))))))))
        (node (F1 0.1)
          (node (F1 0.1)
            (node (F1 0.1)
              (node (F1 0.1)
                (node (F1 0.1)
                  (node (F1 0.1)
                    (node (F1 0.1)
                      (node (F1 0.1)
                        (node (F1 0.1)
                          (node (F1 0.1)
                            (node (F1 0.1)
                              (node (F1 0.1)
                                (node (F1 0.3)
                                  (node (F1 0.3))
                                  (node (F1 0.3)))))))))))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-28.335015501402484 -28.335015501402484)|-28.74048060951065

("log-priors and log-likelihoods: "
  ((-321 -152.25662288283417 -473.25662288283417 #t)
    (-330 -152.25662288283417 -482.25662288283417 #t)
    (-336 -152.25662288283417 -488.25662288283417 #t)
    (-345 -152.25662288283417 -497.25662288283417 #t)
    (-354 -152.25662288283417 -506.25662288283417 #t)
    (-375 -152.25662288283417 -527.2566228828341 #t)
    (-381 -152.25662288283417 -533.2566228828341 #t)
    (-381 -152.25662288283417 -533.2566228828341 #t)
    (-387 -152.25662288283417 -539.2566228828341 #t)
    (-393 -152.25662288283417 -545.2566228828341 #t)
    (-399 -152.25662288283417 -551.2566228828341 #t)
    (-399 -152.25662288283417 -551.2566228828341 #t)
    (-399 -152.25662288283417 -551.2566228828341 #t)
    (-402 -152.25662288283417 -554.2566228828341 #t)
    (-405 -152.25662288283417 -557.2566228828341 #t)
    (-408 -152.25662288283417 -560.2566228828341 #t)
    (-414 -152.25662288283417 -566.2566228828341 #t)
    (-417 -152.25662288283417 -569.2566228828341 #t)
    (-420 -152.25662288283417 -572.2566228828341 #t)
    (-423 -152.25662288283417 -575.2566228828341 #t)
    (-423 -152.25662288283417 -575.2566228828341 #t)
    (-426 -152.25662288283417 -578.2566228828341 #t)
    (-429 -152.25662288283417 -581.2566228828341 #t)
    (-432 -152.25662288283417 -584.2566228828341 #t)
    (-435 -152.25662288283417 -587.2566228828341 #t)
    (-441 -152.25662288283417 -593.2566228828341 #t)
    (-453 -152.25662288283417 -605.2566228828341 #t)
    (-456 -152.25662288283417 -608.2566228828341 #t)
    (-456 -152.25662288283417 -608.2566228828341 #t)
    (-456 -152.25662288283417 -608.2566228828341 #t)
    (-459 -152.25662288283417 -611.2566228828341 #t)
    (-360 -273.9221285217142 -633.9221285217143 #f)
    (-360 -569.0982565217142 -929.0982565217142 #f)
    (-360 -inf.0 -inf.0 #f) (-360 -inf.0 -inf.0 #f)))
CURRENT DEPTH: 8 SIZE: -321 SEMANTICS PRESERVED: #t  

(let ()
  (define F2
    (lambda (V3 V4 V5)
      (node (F1 V3 0.1) (node (F1 V4 0.1) V5))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice
      (node (F1 13.0 0.3) (node (F1 59.0 0.3))
        (node (F1 -0.0 0.3)))
      (node (F1 217.0 0.3) (node (F1 168.0 0.3))
        (node (F1 221.0 0.3)))
      (node (F1 21.0 1)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0 0.1)
                    (node (F1 -12.0 0.3)
                      (node (F1 -22.0 0.3))
                      (node (F1 19.0 0.3)))))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0
                    (node (F1 240.0 0.3)
                      (node (F1 221.0 0.3))
                      (node (F1 217.0 0.3)))))))))))))
prior:  -297
"likelihood for program:"
(let ()
  (define F2
    (lambda (V3 V5)
      ((lambda (V4) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        V3)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice
      (node (F1 13.0 0.3) (node (F1 59.0 0.3))
        (node (F1 -0.0 0.3)))
      (node (F1 217.0 0.3) (node (F1 168.0 0.3))
        (node (F1 221.0 0.3)))
      (node (F1 21.0 1)
        (F2 103.0
          (F2 93.0
            (F2 84.0
              (F2 63.0
                (F2 1e2
                  (node (F1 47.0 0.1)
                    (node (F1 -12.0 0.3)
                      (node (F1 -22.0 0.3))
                      (node (F1 19.0 0.3)))))))))
        (F2 131.0
          (F2 8e1
            (F2 87.0
              (F2 81.0
                (F2 110.0
                  (F2 96.0
                    (node (F1 240.0 0.3)
                      (node (F1 221.0 0.3))
                      (node (F1 217.0 0.3)))))))))))))
likelihood:(-1.0986122886681098)|(-131.32438834735817)|-132.42300063602627

prior:  -297
"likelihood for program:"
(let ()
  (define F2
    (lambda (V3 V5)
      ((lambda (V4) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        V3)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice
      (node (F1 13.0 0.3) (node (F1 59.0 0.3))
        (node (F1 -0.0 0.3)))
      (node (F1 217.0 0.3) (node (F1 168.0 0.3))
        (node (F1 221.0 0.3)))
      (node (F1 21.0 1)
        (F2 103.0
          (F2 93.0
            (F2 84.0
              (F2 63.0
                (F2 1e2
                  (node (F1 47.0 0.1)
                    (node (F1 -12.0 0.3)
                      (node (F1 -22.0 0.3))
                      (node (F1 19.0 0.3)))))))))
        (F2 131.0
          (F2 8e1
            (F2 87.0
              (F2 81.0
                (F2 110.0
                  (F2 96.0
                    (node (F1 240.0 0.3)
                      (node (F1 221.0 0.3))
                      (node (F1 217.0 0.3)))))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-12.413398834735817 -94.28379883473582)|-13.512011123403926

prior:  -297
"likelihood for program:"
(let ()
  (define F2
    (lambda (V3 V5)
      ((lambda (V4) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        V3)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice
      (node (F1 13.0 0.3) (node (F1 59.0 0.3))
        (node (F1 -0.0 0.3)))
      (node (F1 217.0 0.3) (node (F1 168.0 0.3))
        (node (F1 221.0 0.3)))
      (node (F1 21.0 1)
        (F2 103.0
          (F2 93.0
            (F2 84.0
              (F2 63.0
                (F2 1e2
                  (node (F1 47.0 0.1)
                    (node (F1 -12.0 0.3)
                      (node (F1 -22.0 0.3))
                      (node (F1 19.0 0.3)))))))))
        (F2 131.0
          (F2 8e1
            (F2 87.0
              (F2 81.0
                (F2 110.0
                  (F2 96.0
                    (node (F1 240.0 0.3)
                      (node (F1 221.0 0.3))
                      (node (F1 217.0 0.3)))))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-94.28379883473582 -12.413398834735817)|-13.512011123403926

prior:  -297
"likelihood for program:"
(let ()
  (define F2
    (lambda (V4 V5)
      ((lambda (V3) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        V4)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice
      (node (F1 13.0 0.3) (node (F1 59.0 0.3))
        (node (F1 -0.0 0.3)))
      (node (F1 217.0 0.3) (node (F1 168.0 0.3))
        (node (F1 221.0 0.3)))
      (node (F1 21.0 1)
        (F2 124.0
          (F2 125.0
            (F2 81.0
              (F2 82.0
                (F2 66.0
                  (node (F1 47.0 0.1)
                    (node (F1 -12.0 0.3)
                      (node (F1 -22.0 0.3))
                      (node (F1 19.0 0.3)))))))))
        (F2 126.0
          (F2 140.0
            (F2 118.0
              (F2 102.0
                (F2 133.0
                  (F2 117.0
                    (node (F1 240.0 0.3)
                      (node (F1 221.0 0.3))
                      (node (F1 217.0 0.3)))))))))))))
likelihood:(-1.0986122886681098)|(-131.32438834735817)|-132.42300063602627

prior:  -297
"likelihood for program:"
(let ()
  (define F2
    (lambda (V4 V5)
      ((lambda (V3) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        V4)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice
      (node (F1 13.0 0.3) (node (F1 59.0 0.3))
        (node (F1 -0.0 0.3)))
      (node (F1 217.0 0.3) (node (F1 168.0 0.3))
        (node (F1 221.0 0.3)))
      (node (F1 21.0 1)
        (F2 124.0
          (F2 125.0
            (F2 81.0
              (F2 82.0
                (F2 66.0
                  (node (F1 47.0 0.1)
                    (node (F1 -12.0 0.3)
                      (node (F1 -22.0 0.3))
                      (node (F1 19.0 0.3)))))))))
        (F2 126.0
          (F2 140.0
            (F2 118.0
              (F2 102.0
                (F2 133.0
                  (F2 117.0
                    (node (F1 240.0 0.3)
                      (node (F1 221.0 0.3))
                      (node (F1 217.0 0.3)))))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-12.413398834735817 -94.28379883473582)|-13.512011123403926

prior:  -297
"likelihood for program:"
(let ()
  (define F2
    (lambda (V4 V5)
      ((lambda (V3) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        V4)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice
      (node (F1 13.0 0.3) (node (F1 59.0 0.3))
        (node (F1 -0.0 0.3)))
      (node (F1 217.0 0.3) (node (F1 168.0 0.3))
        (node (F1 221.0 0.3)))
      (node (F1 21.0 1)
        (F2 124.0
          (F2 125.0
            (F2 81.0
              (F2 82.0
                (F2 66.0
                  (node (F1 47.0 0.1)
                    (node (F1 -12.0 0.3)
                      (node (F1 -22.0 0.3))
                      (node (F1 19.0 0.3)))))))))
        (F2 126.0
          (F2 140.0
            (F2 118.0
              (F2 102.0
                (F2 133.0
                  (F2 117.0
                    (node (F1 240.0 0.3)
                      (node (F1 221.0 0.3))
                      (node (F1 217.0 0.3)))))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-94.28379883473582 -12.413398834735817)|-13.512011123403926

prior:  -267
"likelihood for program:"
(let ()
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1)
                (node (F1 -12.0 0.3) (node (F1 -22.0 0.3))
                  (node (F1 19.0 0.3))))
              (node (F1 240.0 0.3) (node (F1 221.0 0.3))
                (node (F1 217.0 0.3))))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice
      (node (F1 13.0 0.3) (node (F1 59.0 0.3))
        (node (F1 -0.0 0.3)))
      (node (F1 217.0 0.3) (node (F1 168.0 0.3))
        (node (F1 221.0 0.3)))
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-132.03318834735816)|-139.73362744078239

prior:  -267
"likelihood for program:"
(let ()
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1)
                (node (F1 -12.0 0.3) (node (F1 -22.0 0.3))
                  (node (F1 19.0 0.3))))
              (node (F1 240.0 0.3) (node (F1 221.0 0.3))
                (node (F1 217.0 0.3))))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice
      (node (F1 13.0 0.3) (node (F1 59.0 0.3))
        (node (F1 -0.0 0.3)))
      (node (F1 217.0 0.3) (node (F1 168.0 0.3))
        (node (F1 221.0 0.3)))
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-12.413398834735817 -94.28379883473582)|-13.512011123403926

prior:  -267
"likelihood for program:"
(let ()
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1)
                (node (F1 -12.0 0.3) (node (F1 -22.0 0.3))
                  (node (F1 19.0 0.3))))
              (node (F1 240.0 0.3) (node (F1 221.0 0.3))
                (node (F1 217.0 0.3))))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice
      (node (F1 13.0 0.3) (node (F1 59.0 0.3))
        (node (F1 -0.0 0.3)))
      (node (F1 217.0 0.3) (node (F1 168.0 0.3))
        (node (F1 221.0 0.3)))
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-94.28379883473582 -12.413398834735817)|-13.512011123403926

prior:  -282
"likelihood for program:"
(let ()
  (define F2
    (lambda (V3 V4 V5) (node (F1 V3) (node (F1 V4) V5))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.3062499999999999)))
  (lambda ()
    (uniform-choice
      (node (F1 13.0) (node (F1 59.0)) (node (F1 -0.0)))
      (node (F1 217.0) (node (F1 168.0)) (node (F1 221.0)))
      (node (F1 21.0)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0)
                    (node (F1 -12.0) (node (F1 -22.0))
                      (node (F1 19.0)))))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0
                    (node (F1 240.0) (node (F1 221.0))
                      (node (F1 217.0)))))))))))))
likelihood:(-1.0986122886681098)|(-inf.0)|-inf.0

prior:  -282
"likelihood for program:"
(let ()
  (define F2
    (lambda (V3 V4 V5) (node (F1 V3) (node (F1 V4) V5))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.3062499999999999)))
  (lambda ()
    (uniform-choice
      (node (F1 13.0) (node (F1 59.0)) (node (F1 -0.0)))
      (node (F1 217.0) (node (F1 168.0)) (node (F1 221.0)))
      (node (F1 21.0)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0)
                    (node (F1 -12.0) (node (F1 -22.0))
                      (node (F1 19.0)))))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0
                    (node (F1 240.0) (node (F1 221.0))
                      (node (F1 217.0)))))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-inf.0 -inf.0)|-inf.0

prior:  -282
"likelihood for program:"
(let ()
  (define F2
    (lambda (V3 V4 V5) (node (F1 V3) (node (F1 V4) V5))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.3062499999999999)))
  (lambda ()
    (uniform-choice
      (node (F1 13.0) (node (F1 59.0)) (node (F1 -0.0)))
      (node (F1 217.0) (node (F1 168.0)) (node (F1 221.0)))
      (node (F1 21.0)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0)
                    (node (F1 -12.0) (node (F1 -22.0))
                      (node (F1 19.0)))))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0
                    (node (F1 240.0) (node (F1 221.0))
                      (node (F1 217.0)))))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-inf.0 -inf.0)|-inf.0

prior:  -297
"likelihood for program:"
(let ()
  (define F2
    (lambda (V3 V5)
      ((lambda (V4) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        110.36363636363636)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice
      (node (F1 13.0 0.3) (node (F1 59.0 0.3))
        (node (F1 -0.0 0.3)))
      (node (F1 217.0 0.3) (node (F1 168.0 0.3))
        (node (F1 221.0 0.3)))
      (node (F1 21.0 1)
        (F2 103.0
          (F2 93.0
            (F2 84.0
              (F2 63.0
                (F2 1e2
                  (node (F1 47.0 0.1)
                    (node (F1 -12.0 0.3)
                      (node (F1 -22.0 0.3))
                      (node (F1 19.0 0.3)))))))))
        (F2 131.0
          (F2 8e1
            (F2 87.0
              (F2 81.0
                (F2 110.0
                  (F2 96.0
                    (node (F1 240.0 0.3)
                      (node (F1 221.0 0.3))
                      (node (F1 217.0 0.3)))))))))))))
likelihood:(-1.0986122886681098)|(-128.80802471099454)|-129.90663699966265

prior:  -297
"likelihood for program:"
(let ()
  (define F2
    (lambda (V3 V5)
      ((lambda (V4) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        110.36363636363636)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice
      (node (F1 13.0 0.3) (node (F1 59.0 0.3))
        (node (F1 -0.0 0.3)))
      (node (F1 217.0 0.3) (node (F1 168.0 0.3))
        (node (F1 221.0 0.3)))
      (node (F1 21.0 1)
        (F2 103.0
          (F2 93.0
            (F2 84.0
              (F2 63.0
                (F2 1e2
                  (node (F1 47.0 0.1)
                    (node (F1 -12.0 0.3)
                      (node (F1 -22.0 0.3))
                      (node (F1 19.0 0.3)))))))))
        (F2 131.0
          (F2 8e1
            (F2 87.0
              (F2 81.0
                (F2 110.0
                  (F2 96.0
                    (node (F1 240.0 0.3)
                      (node (F1 221.0 0.3))
                      (node (F1 217.0 0.3)))))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-94.28379883473582 -12.413398834735817)|-13.512011123403926

prior:  -297
"likelihood for program:"
(let ()
  (define F2
    (lambda (V3 V5)
      ((lambda (V4) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        110.36363636363636)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice
      (node (F1 13.0 0.3) (node (F1 59.0 0.3))
        (node (F1 -0.0 0.3)))
      (node (F1 217.0 0.3) (node (F1 168.0 0.3))
        (node (F1 221.0 0.3)))
      (node (F1 21.0 1)
        (F2 103.0
          (F2 93.0
            (F2 84.0
              (F2 63.0
                (F2 1e2
                  (node (F1 47.0 0.1)
                    (node (F1 -12.0 0.3)
                      (node (F1 -22.0 0.3))
                      (node (F1 19.0 0.3)))))))))
        (F2 131.0
          (F2 8e1
            (F2 87.0
              (F2 81.0
                (F2 110.0
                  (F2 96.0
                    (node (F1 240.0 0.3)
                      (node (F1 221.0 0.3))
                      (node (F1 217.0 0.3)))))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-12.413398834735817 -94.28379883473582)|-13.512011123403926

prior:  -297
"likelihood for program:"
(let ()
  (define F2
    (lambda (V4 V5)
      ((lambda (V3) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        93.45454545454545)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice
      (node (F1 13.0 0.3) (node (F1 59.0 0.3))
        (node (F1 -0.0 0.3)))
      (node (F1 217.0 0.3) (node (F1 168.0 0.3))
        (node (F1 221.0 0.3)))
      (node (F1 21.0 1)
        (F2 124.0
          (F2 125.0
            (F2 81.0
              (F2 82.0
                (F2 66.0
                  (node (F1 47.0 0.1)
                    (node (F1 -12.0 0.3)
                      (node (F1 -22.0 0.3))
                      (node (F1 19.0 0.3)))))))))
        (F2 126.0
          (F2 140.0
            (F2 118.0
              (F2 102.0
                (F2 133.0
                  (F2 117.0
                    (node (F1 240.0 0.3)
                      (node (F1 221.0 0.3))
                      (node (F1 217.0 0.3)))))))))))))
likelihood:(-1.0986122886681098)|(-126.70897016554)|-127.8075824542081

prior:  -297
"likelihood for program:"
(let ()
  (define F2
    (lambda (V4 V5)
      ((lambda (V3) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        93.45454545454545)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice
      (node (F1 13.0 0.3) (node (F1 59.0 0.3))
        (node (F1 -0.0 0.3)))
      (node (F1 217.0 0.3) (node (F1 168.0 0.3))
        (node (F1 221.0 0.3)))
      (node (F1 21.0 1)
        (F2 124.0
          (F2 125.0
            (F2 81.0
              (F2 82.0
                (F2 66.0
                  (node (F1 47.0 0.1)
                    (node (F1 -12.0 0.3)
                      (node (F1 -22.0 0.3))
                      (node (F1 19.0 0.3)))))))))
        (F2 126.0
          (F2 140.0
            (F2 118.0
              (F2 102.0
                (F2 133.0
                  (F2 117.0
                    (node (F1 240.0 0.3)
                      (node (F1 221.0 0.3))
                      (node (F1 217.0 0.3)))))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-12.413398834735817 -94.28379883473582)|-13.512011123403926

prior:  -297
"likelihood for program:"
(let ()
  (define F2
    (lambda (V4 V5)
      ((lambda (V3) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        93.45454545454545)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice
      (node (F1 13.0 0.3) (node (F1 59.0 0.3))
        (node (F1 -0.0 0.3)))
      (node (F1 217.0 0.3) (node (F1 168.0 0.3))
        (node (F1 221.0 0.3)))
      (node (F1 21.0 1)
        (F2 124.0
          (F2 125.0
            (F2 81.0
              (F2 82.0
                (F2 66.0
                  (node (F1 47.0 0.1)
                    (node (F1 -12.0 0.3)
                      (node (F1 -22.0 0.3))
                      (node (F1 19.0 0.3)))))))))
        (F2 126.0
          (F2 140.0
            (F2 118.0
              (F2 102.0
                (F2 133.0
                  (F2 117.0
                    (node (F1 240.0 0.3)
                      (node (F1 221.0 0.3))
                      (node (F1 217.0 0.3)))))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-94.28379883473582 -12.413398834735817)|-13.512011123403926

("log-priors and log-likelihoods: "
  ((-261 -152.25662288283417 -413.25662288283417 #t)
    (-267 -166.75764968759023 -433.75764968759023 #f)
    (-285 -152.25662288283417 -437.25662288283417 #t)
    (-294 -152.25662288283417 -446.25662288283417 #t)
    (-297 -154.83160470101595 -451.831604701016 #f)
    (-297 -156.9306592464705 -453.9306592464705 #f)
    (-297 -159.44702288283412 -456.4470228828341 #f)
    (-297 -159.44702288283412 -456.4470228828341 #f)
    (-315 -152.25662288283417 -467.25662288283417 #t)
    (-318 -152.25662288283417 -470.25662288283417 #t)
    (-318 -152.25662288283417 -470.25662288283417 #t)
    (-318 -152.25662288283417 -470.25662288283417 #t)
    (-321 -152.25662288283417 -473.25662288283417 #t)
    (-282 -inf.0 -inf.0 #f)))
CURRENT DEPTH: 7 SIZE: -261 SEMANTICS PRESERVED: #t  

(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6 0.3) (node (F1 V7 0.3))
        (node (F1 V8 0.3)))))
  (define F2
    (lambda (V3 V4 V5)
      (node (F1 V3 0.1) (node (F1 V4 0.1) V5))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0 1)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0 0.1) (F3 -12.0 -22.0 19.0)))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0 (F3 240.0 221.0 217.0)))))))))))
prior:  -237
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6 0.3) (node (F1 V7 0.3))
        (node (F1 V8 0.3)))))
  (define F2
    (lambda (V3 V5)
      ((lambda (V4) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        V3)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0 1)
        (F2 103.0
          (F2 93.0
            (F2 84.0
              (F2 63.0
                (F2 1e2
                  (node (F1 47.0 0.1) (F3 -12.0 -22.0 19.0)))))))
        (F2 131.0
          (F2 8e1
            (F2 87.0
              (F2 81.0
                (F2 110.0 (F2 96.0 (F3 240.0 221.0 217.0)))))))))))
likelihood:(-1.0986122886681098)|(-131.32438834735817)|-132.42300063602627

prior:  -237
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6 0.3) (node (F1 V7 0.3))
        (node (F1 V8 0.3)))))
  (define F2
    (lambda (V3 V5)
      ((lambda (V4) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        V3)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0 1)
        (F2 103.0
          (F2 93.0
            (F2 84.0
              (F2 63.0
                (F2 1e2
                  (node (F1 47.0 0.1) (F3 -12.0 -22.0 19.0)))))))
        (F2 131.0
          (F2 8e1
            (F2 87.0
              (F2 81.0
                (F2 110.0 (F2 96.0 (F3 240.0 221.0 217.0)))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-12.413398834735817 -94.28379883473582)|-13.512011123403926

prior:  -237
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6 0.3) (node (F1 V7 0.3))
        (node (F1 V8 0.3)))))
  (define F2
    (lambda (V3 V5)
      ((lambda (V4) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        V3)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0 1)
        (F2 103.0
          (F2 93.0
            (F2 84.0
              (F2 63.0
                (F2 1e2
                  (node (F1 47.0 0.1) (F3 -12.0 -22.0 19.0)))))))
        (F2 131.0
          (F2 8e1
            (F2 87.0
              (F2 81.0
                (F2 110.0 (F2 96.0 (F3 240.0 221.0 217.0)))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-12.413398834735817 -94.28379883473582)|-13.512011123403926

prior:  -237
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6 0.3) (node (F1 V7 0.3))
        (node (F1 V8 0.3)))))
  (define F2
    (lambda (V4 V5)
      ((lambda (V3) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        V4)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0 1)
        (F2 124.0
          (F2 125.0
            (F2 81.0
              (F2 82.0
                (F2 66.0
                  (node (F1 47.0 0.1) (F3 -12.0 -22.0 19.0)))))))
        (F2 126.0
          (F2 140.0
            (F2 118.0
              (F2 102.0
                (F2 133.0 (F2 117.0 (F3 240.0 221.0 217.0)))))))))))
likelihood:(-1.0986122886681098)|(-131.32438834735817)|-132.42300063602627

prior:  -237
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6 0.3) (node (F1 V7 0.3))
        (node (F1 V8 0.3)))))
  (define F2
    (lambda (V4 V5)
      ((lambda (V3) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        V4)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0 1)
        (F2 124.0
          (F2 125.0
            (F2 81.0
              (F2 82.0
                (F2 66.0
                  (node (F1 47.0 0.1) (F3 -12.0 -22.0 19.0)))))))
        (F2 126.0
          (F2 140.0
            (F2 118.0
              (F2 102.0
                (F2 133.0 (F2 117.0 (F3 240.0 221.0 217.0)))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-12.413398834735817 -94.28379883473582)|-13.512011123403926

prior:  -237
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6 0.3) (node (F1 V7 0.3))
        (node (F1 V8 0.3)))))
  (define F2
    (lambda (V4 V5)
      ((lambda (V3) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        V4)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0 1)
        (F2 124.0
          (F2 125.0
            (F2 81.0
              (F2 82.0
                (F2 66.0
                  (node (F1 47.0 0.1) (F3 -12.0 -22.0 19.0)))))))
        (F2 126.0
          (F2 140.0
            (F2 118.0
              (F2 102.0
                (F2 133.0 (F2 117.0 (F3 240.0 221.0 217.0)))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-12.413398834735817 -94.28379883473582)|-13.512011123403926

prior:  -258
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V7)))
  (define F2
    (lambda (V3 V4 V5)
      (node (F1 V3 0.1) (node (F1 V4 0.1) V5))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0 0.1) (F3 -12.0 -22.0)))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0 (F3 240.0 221.0)))))))))))
likelihood:(-1.0986122886681098)|(-125.4915883473582)|-126.59020063602631

prior:  -258
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V7)))
  (define F2
    (lambda (V3 V4 V5)
      (node (F1 V3 0.1) (node (F1 V4 0.1) V5))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0 0.1) (F3 -12.0 -22.0)))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0 (F3 240.0 221.0)))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-76.20619883473583 -14.660598834735817)|-15.759211123403926

prior:  -258
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V7)))
  (define F2
    (lambda (V3 V4 V5)
      (node (F1 V3 0.1) (node (F1 V4 0.1) V5))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0 0.1) (F3 -12.0 -22.0)))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0 (F3 240.0 221.0)))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-15.198198834735818 -77.79019883473582)|-16.296811123403927

prior:  -258
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V8)
      ((lambda (V7)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V6)))
  (define F2
    (lambda (V3 V4 V5)
      (node (F1 V3 0.1) (node (F1 V4 0.1) V5))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 -0.0) (F3 217.0 221.0)
      (node (F1 21.0 1)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0 0.1) (F3 -12.0 19.0)))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0 (F3 240.0 217.0)))))))))))
likelihood:(-1.0986122886681098)|(-124.5027883473582)|-125.60140063602631

prior:  -258
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V8)
      ((lambda (V7)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V6)))
  (define F2
    (lambda (V3 V4 V5)
      (node (F1 V3 0.1) (node (F1 V4 0.1) V5))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 -0.0) (F3 217.0 221.0)
      (node (F1 21.0 1)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0 0.1) (F3 -12.0 19.0)))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0 (F3 240.0 217.0)))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-103.99899883473583 -14.334198834735817)|-15.432811123403926

prior:  -258
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V8)
      ((lambda (V7)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V6)))
  (define F2
    (lambda (V3 V4 V5)
      (node (F1 V3 0.1) (node (F1 V4 0.1) V5))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 -0.0) (F3 217.0 221.0)
      (node (F1 21.0 1)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0 0.1) (F3 -12.0 19.0)))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0 (F3 240.0 217.0)))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-14.106198834735817 -104.75019883473581)|-15.204811123403926

prior:  -258
"likelihood for program:"
(let ()
  (define F3
    (lambda (V7 V8)
      ((lambda (V6)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V8)))
  (define F2
    (lambda (V3 V4 V5)
      (node (F1 V3 0.1) (node (F1 V4 0.1) V5))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0 -0.0) (F3 168.0 221.0)
      (node (F1 21.0 1)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0 0.1) (F3 -22.0 19.0)))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0 (F3 221.0 217.0)))))))))))
likelihood:(-1.0986122886681098)|(-125.3259883473582)|-126.42460063602631

prior:  -258
"likelihood for program:"
(let ()
  (define F3
    (lambda (V7 V8)
      ((lambda (V6)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V8)))
  (define F2
    (lambda (V3 V4 V5)
      (node (F1 V3 0.1) (node (F1 V4 0.1) V5))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0 -0.0) (F3 168.0 221.0)
      (node (F1 21.0 1)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0 0.1) (F3 -22.0 19.0)))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0 (F3 221.0 217.0)))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-12.426198834735818 -98.66219883473582)|-13.524811123403927

prior:  -258
"likelihood for program:"
(let ()
  (define F3
    (lambda (V7 V8)
      ((lambda (V6)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V8)))
  (define F2
    (lambda (V3 V4 V5)
      (node (F1 V3 0.1) (node (F1 V4 0.1) V5))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0 -0.0) (F3 168.0 221.0)
      (node (F1 21.0 1)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0 0.1) (F3 -22.0 19.0)))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0 (F3 221.0 217.0)))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098 -1.0986122886681098 -1.0986122886681098)|(-12.548598834735817 -95.60219883473582 -95.60219883473582 -12.548598834735817)|-12.95406394284398

prior:  -207
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6 0.3) (node (F1 V7 0.3))
        (node (F1 V8 0.3)))))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -12.0 -22.0 19.0))
              (F3 240.0 221.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-132.03318834735816)|-139.73362744078239

prior:  -207
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6 0.3) (node (F1 V7 0.3))
        (node (F1 V8 0.3)))))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -12.0 -22.0 19.0))
              (F3 240.0 221.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-94.28379883473582 -12.413398834735817)|-13.512011123403926

prior:  -207
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6 0.3) (node (F1 V7 0.3))
        (node (F1 V8 0.3)))))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -12.0 -22.0 19.0))
              (F3 240.0 221.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-12.413398834735817 -94.28379883473582)|-13.512011123403926

prior:  -249
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6) (node (F1 V7)) (node (F1 V8)))))
  (define F2
    (lambda (V3 V4 V5) (node (F1 V3) (node (F1 V4) V5))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.31428571428571433)))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0) (F3 -12.0 -22.0 19.0)))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0 (F3 240.0 221.0 217.0)))))))))))
likelihood:(-1.0986122886681098)|(-inf.0)|-inf.0

prior:  -249
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6) (node (F1 V7)) (node (F1 V8)))))
  (define F2
    (lambda (V3 V4 V5) (node (F1 V3) (node (F1 V4) V5))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.31428571428571433)))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0) (F3 -12.0 -22.0 19.0)))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0 (F3 240.0 221.0 217.0)))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-inf.0 -inf.0)|-inf.0

prior:  -249
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6) (node (F1 V7)) (node (F1 V8)))))
  (define F2
    (lambda (V3 V4 V5) (node (F1 V3) (node (F1 V4) V5))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.31428571428571433)))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0) (F3 -12.0 -22.0 19.0)))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0 (F3 240.0 221.0 217.0)))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-inf.0 -inf.0)|-inf.0

prior:  -237
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6 0.3) (node (F1 V7 0.3))
        (node (F1 V8 0.3)))))
  (define F2
    (lambda (V3 V5)
      ((lambda (V4) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        110.36363636363636)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0 1)
        (F2 103.0
          (F2 93.0
            (F2 84.0
              (F2 63.0
                (F2 1e2
                  (node (F1 47.0 0.1) (F3 -12.0 -22.0 19.0)))))))
        (F2 131.0
          (F2 8e1
            (F2 87.0
              (F2 81.0
                (F2 110.0 (F2 96.0 (F3 240.0 221.0 217.0)))))))))))
likelihood:(-1.0986122886681098)|(-128.80802471099454)|-129.90663699966265

prior:  -237
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6 0.3) (node (F1 V7 0.3))
        (node (F1 V8 0.3)))))
  (define F2
    (lambda (V3 V5)
      ((lambda (V4) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        110.36363636363636)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0 1)
        (F2 103.0
          (F2 93.0
            (F2 84.0
              (F2 63.0
                (F2 1e2
                  (node (F1 47.0 0.1) (F3 -12.0 -22.0 19.0)))))))
        (F2 131.0
          (F2 8e1
            (F2 87.0
              (F2 81.0
                (F2 110.0 (F2 96.0 (F3 240.0 221.0 217.0)))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-94.28379883473582 -12.413398834735817)|-13.512011123403926

prior:  -237
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6 0.3) (node (F1 V7 0.3))
        (node (F1 V8 0.3)))))
  (define F2
    (lambda (V3 V5)
      ((lambda (V4) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        110.36363636363636)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0 1)
        (F2 103.0
          (F2 93.0
            (F2 84.0
              (F2 63.0
                (F2 1e2
                  (node (F1 47.0 0.1) (F3 -12.0 -22.0 19.0)))))))
        (F2 131.0
          (F2 8e1
            (F2 87.0
              (F2 81.0
                (F2 110.0 (F2 96.0 (F3 240.0 221.0 217.0)))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-94.28379883473582 -12.413398834735817)|-13.512011123403926

prior:  -237
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6 0.3) (node (F1 V7 0.3))
        (node (F1 V8 0.3)))))
  (define F2
    (lambda (V4 V5)
      ((lambda (V3) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        93.45454545454545)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0 1)
        (F2 124.0
          (F2 125.0
            (F2 81.0
              (F2 82.0
                (F2 66.0
                  (node (F1 47.0 0.1) (F3 -12.0 -22.0 19.0)))))))
        (F2 126.0
          (F2 140.0
            (F2 118.0
              (F2 102.0
                (F2 133.0 (F2 117.0 (F3 240.0 221.0 217.0)))))))))))
likelihood:(-1.0986122886681098)|(-126.70897016554)|-127.8075824542081

prior:  -237
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6 0.3) (node (F1 V7 0.3))
        (node (F1 V8 0.3)))))
  (define F2
    (lambda (V4 V5)
      ((lambda (V3) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        93.45454545454545)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0 1)
        (F2 124.0
          (F2 125.0
            (F2 81.0
              (F2 82.0
                (F2 66.0
                  (node (F1 47.0 0.1) (F3 -12.0 -22.0 19.0)))))))
        (F2 126.0
          (F2 140.0
            (F2 118.0
              (F2 102.0
                (F2 133.0 (F2 117.0 (F3 240.0 221.0 217.0)))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-94.28379883473582 -12.413398834735817)|-13.512011123403926

prior:  -237
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6 0.3) (node (F1 V7 0.3))
        (node (F1 V8 0.3)))))
  (define F2
    (lambda (V4 V5)
      ((lambda (V3) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        93.45454545454545)))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0 1)
        (F2 124.0
          (F2 125.0
            (F2 81.0
              (F2 82.0
                (F2 66.0
                  (node (F1 47.0 0.1) (F3 -12.0 -22.0 19.0)))))))
        (F2 126.0
          (F2 140.0
            (F2 118.0
              (F2 102.0
                (F2 133.0 (F2 117.0 (F3 240.0 221.0 217.0)))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-12.413398834735817 -94.28379883473582)|-13.512011123403926

prior:  -258
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        114.25)))
  (define F2
    (lambda (V3 V4 V5)
      (node (F1 V3 0.1) (node (F1 V4 0.1) V5))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0 0.1) (F3 -12.0 -22.0)))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0 (F3 240.0 221.0)))))))))))
likelihood:(-1.0986122886681098)|(-139.8380883473582)|-140.9367006360263

prior:  -258
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        114.25)))
  (define F2
    (lambda (V3 V4 V5)
      (node (F1 V3 0.1) (node (F1 V4 0.1) V5))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0 0.1) (F3 -12.0 -22.0)))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0 (F3 240.0 221.0)))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-21.529848834735816 -64.32744883473582)|-22.628461123403927

prior:  -258
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        114.25)))
  (define F2
    (lambda (V3 V4 V5)
      (node (F1 V3 0.1) (node (F1 V4 0.1) V5))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0 0.1) (F3 -12.0 -22.0)))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0 (F3 240.0 221.0)))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-22.855848834735816 -65.65344883473583)|-23.954461123403927

prior:  -258
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V8)
      ((lambda (V7)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        106.5)))
  (define F2
    (lambda (V3 V4 V5)
      (node (F1 V3 0.1) (node (F1 V4 0.1) V5))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 -0.0) (F3 217.0 221.0)
      (node (F1 21.0 1)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0 0.1) (F3 -12.0 19.0)))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0 (F3 240.0 217.0)))))))))))
likelihood:(-1.0986122886681098)|(-147.8319883473582)|-148.9306006360263

prior:  -258
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V8)
      ((lambda (V7)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        106.5)))
  (define F2
    (lambda (V3 V4 V5)
      (node (F1 V3 0.1) (node (F1 V4 0.1) V5))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 -0.0) (F3 217.0 221.0)
      (node (F1 21.0 1)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0 0.1) (F3 -12.0 19.0)))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0 (F3 240.0 217.0)))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-15.439198834735818 -87.80479883473582)|-16.537811123403927

prior:  -258
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V8)
      ((lambda (V7)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        106.5)))
  (define F2
    (lambda (V3 V4 V5)
      (node (F1 V3 0.1) (node (F1 V4 0.1) V5))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 -0.0) (F3 217.0 221.0)
      (node (F1 21.0 1)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0 0.1) (F3 -12.0 19.0)))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0 (F3 240.0 217.0)))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-14.218398834735817 -86.58399883473582)|-15.317011123403926

prior:  -258
"likelihood for program:"
(let ()
  (define F3
    (lambda (V7 V8)
      ((lambda (V6)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        114.5)))
  (define F2
    (lambda (V3 V4 V5)
      (node (F1 V3 0.1) (node (F1 V4 0.1) V5))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0 -0.0) (F3 168.0 221.0)
      (node (F1 21.0 1)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0 0.1) (F3 -22.0 19.0)))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0 (F3 221.0 217.0)))))))))))
likelihood:(-1.0986122886681098)|(-149.53598834735817)|-150.63460063602628

prior:  -258
"likelihood for program:"
(let ()
  (define F3
    (lambda (V7 V8)
      ((lambda (V6)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        114.5)))
  (define F2
    (lambda (V3 V4 V5)
      (node (F1 V3 0.1) (node (F1 V4 0.1) V5))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0 -0.0) (F3 168.0 221.0)
      (node (F1 21.0 1)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0 0.1) (F3 -22.0 19.0)))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0 (F3 221.0 217.0)))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-20.818398834735817 -69.39599883473582)|-21.917011123403928

prior:  -258
"likelihood for program:"
(let ()
  (define F3
    (lambda (V7 V8)
      ((lambda (V6)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        114.5)))
  (define F2
    (lambda (V3 V4 V5)
      (node (F1 V3 0.1) (node (F1 V4 0.1) V5))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0 -0.0) (F3 168.0 221.0)
      (node (F1 21.0 1)
        (F2 103.0 124.0
          (F2 93.0 125.0
            (F2 84.0 81.0
              (F2 63.0 82.0
                (F2 1e2 66.0
                  (node (F1 47.0 0.1) (F3 -22.0 19.0)))))))
        (F2 131.0 126.0
          (F2 8e1 140.0
            (F2 87.0 118.0
              (F2 81.0 102.0
                (F2 110.0 133.0
                  (F2 96.0 117.0 (F3 221.0 217.0)))))))))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-69.23279883473582 -20.655198834735817)|-21.753811123403928

("log-priors and log-likelihoods: "
  ((-207 -166.75764968759023 -373.75764968759023 #f)
    (-237 -154.83160470101595 -391.831604701016 #f)
    (-237 -156.9306592464705 -393.9306592464705 #f)
    (-237 -159.44702288283412 -396.4470228828341 #f)
    (-237 -159.44702288283412 -396.4470228828341 #f)
    (-258 -152.25662288283417 -410.25662288283417 #t)
    (-258 -152.90347570227422 -410.90347570227425 #f)
    (-261 -152.25662288283417 -413.25662288283417 #t)
    (-258 -156.23902288283415 -414.23902288283415 #f)
    (-258 -158.64622288283417 -416.6462228828342 #f)
    (-258 -180.78542288283415 -438.78542288283415 #f)
    (-258 -187.51962288283414 -445.51962288283414 #f)
    (-258 -194.30542288283414 -452.30542288283414 #f)
    (-249 -inf.0 -inf.0 #f)))
CURRENT DEPTH: 6 SIZE: -207 SEMANTICS PRESERVED: #f  

(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6 0.3) (node (F1 V7 0.3))
        (node (F1 V8 0.3)))))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -12.0 -22.0 19.0))
              (F3 240.0 221.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
prior:  -204
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V7)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-133.39078834735818)|-141.0912274407824

prior:  -204
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V7)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-14.660598834735817 -76.20619883473583)|-15.759211123403926

prior:  -204
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V7)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-77.79019883473582 -15.198198834735818)|-16.296811123403927

prior:  -204
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V8)
      ((lambda (V7)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V8)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -12.0 19.0))
              (F3 240.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 -0.0) (F3 217.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-133.39078834735818)|-141.0912274407824

prior:  -204
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V8)
      ((lambda (V7)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V8)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -12.0 19.0))
              (F3 240.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 -0.0) (F3 217.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-14.660598834735817 -107.35819883473582)|-15.759211123403926

prior:  -204
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V8)
      ((lambda (V7)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V8)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -12.0 19.0))
              (F3 240.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 -0.0) (F3 217.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-105.77419883473581 -15.198198834735818)|-16.296811123403927

prior:  -204
"likelihood for program:"
(let ()
  (define F3
    (lambda (V7 V8)
      ((lambda (V6)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V7)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -22.0 19.0))
              (F3 221.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0 -0.0) (F3 168.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-132.40198834735818)|-140.1024274407824

prior:  -204
"likelihood for program:"
(let ()
  (define F3
    (lambda (V7 V8)
      ((lambda (V6)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V7)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -22.0 19.0))
              (F3 221.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0 -0.0) (F3 168.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-80.96219883473582 -14.334198834735817)|-15.432811123403926

prior:  -204
"likelihood for program:"
(let ()
  (define F3
    (lambda (V7 V8)
      ((lambda (V6)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V7)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -22.0 19.0))
              (F3 221.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0 -0.0) (F3 168.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-80.21099883473582 -14.106198834735817)|-15.204811123403926

prior:  -195
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6) (node (F1 V7)) (node (F1 V8)))))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3) (node (F1 V4) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0) (F3 -12.0 -22.0 19.0))
              (F3 240.0 221.0 217.0))))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.31428571428571433)))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-inf.0)|-inf.0

prior:  -195
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6) (node (F1 V7)) (node (F1 V8)))))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3) (node (F1 V4) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0) (F3 -12.0 -22.0 19.0))
              (F3 240.0 221.0 217.0))))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.31428571428571433)))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-inf.0 -inf.0)|-inf.0

prior:  -195
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6) (node (F1 V7)) (node (F1 V8)))))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3) (node (F1 V4) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0) (F3 -12.0 -22.0 19.0))
              (F3 240.0 221.0 217.0))))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.31428571428571433)))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-inf.0 -inf.0)|-inf.0

prior:  -204
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        114.25)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-147.73728834735817)|-155.4377274407824

prior:  -204
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        114.25)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-64.32744883473582 -21.529848834735816)|-22.628461123403927

prior:  -204
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        114.25)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-65.65344883473583 -22.855848834735816)|-23.954461123403927

prior:  -204
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V8)
      ((lambda (V7)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        106.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -12.0 19.0))
              (F3 240.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 -0.0) (F3 217.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-155.73118834735817)|-163.4316274407824

prior:  -204
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V8)
      ((lambda (V7)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        106.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -12.0 19.0))
              (F3 240.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 -0.0) (F3 217.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-87.80479883473582 -15.439198834735818)|-16.537811123403927

prior:  -204
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V8)
      ((lambda (V7)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        106.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -12.0 19.0))
              (F3 240.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 -0.0) (F3 217.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-14.218398834735817 -86.58399883473582)|-15.317011123403926

prior:  -204
"likelihood for program:"
(let ()
  (define F3
    (lambda (V7 V8)
      ((lambda (V6)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        114.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -22.0 19.0))
              (F3 221.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0 -0.0) (F3 168.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-157.43518834735815)|-165.13562744078237

prior:  -204
"likelihood for program:"
(let ()
  (define F3
    (lambda (V7 V8)
      ((lambda (V6)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        114.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -22.0 19.0))
              (F3 221.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0 -0.0) (F3 168.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098 -1.0986122886681098 -1.0986122886681098 -1.0986122886681098 -1.0986122886681098)|(-69.39599883473582 -69.39599883473582 -20.818398834735817 -20.818398834735817 -69.39599883473582 -20.818398834735817)|-20.818398834735817

prior:  -204
"likelihood for program:"
(let ()
  (define F3
    (lambda (V7 V8)
      ((lambda (V6)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        114.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -22.0 19.0))
              (F3 221.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0 -0.0) (F3 168.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-69.23279883473582 -20.655198834735817)|-21.753811123403928

("log-priors and log-likelihoods: "
  ((-204 -166.75764968759023 -370.75764968759023 #t)
    (-207 -166.75764968759023 -373.75764968759023 #t)
    (-204 -170.74004968759027 -374.7400496875903 #f)
    (-204 -173.14724968759026 -377.14724968759026 #f)
    (-204 -173.14724968759026 -377.14724968759026 #f)
    (-204 -195.28644968759025 -399.2864496875902 #f)
    (-204 -202.02064968759026 -406.02064968759026 #f)
    (-204 -207.70783739892212 -411.70783739892215 #f)
    (-195 -inf.0 -inf.0 #f)))
CURRENT DEPTH: 5 SIZE: -204 SEMANTICS PRESERVED: #t  

(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6 0.3) (node (F1 V7 0.3))
        (node (F1 V8 0.3)))))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0 19.0))
              (F3 240.0 221.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
prior:  -201
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-133.22518834735817)|-140.9256274407824

prior:  -201
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-12.426198834735818 -89.82219883473581)|-13.524811123403927

prior:  -201
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-12.548598834735818 -92.88219883473582)|-13.647211123403928

prior:  -201
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6 V8)
      ((lambda (V7)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 19.0))
              (F3 240.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 -0.0) (F3 217.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-132.40198834735818)|-140.1024274407824

prior:  -201
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6 V8)
      ((lambda (V7)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 19.0))
              (F3 240.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 -0.0) (F3 217.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-103.99899883473583 -14.334198834735817)|-15.432811123403926

prior:  -201
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6 V8)
      ((lambda (V7)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 19.0))
              (F3 240.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 -0.0) (F3 217.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-104.75019883473581 -14.106198834735817)|-15.204811123403926

prior:  -201
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7 V8)
      ((lambda (V6)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V7)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0 19.0))
              (F3 221.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0 -0.0) (F3 168.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-132.40198834735818)|-140.1024274407824

prior:  -201
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7 V8)
      ((lambda (V6)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V7)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0 19.0))
              (F3 221.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0 -0.0) (F3 168.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-14.334198834735817 -80.96219883473582)|-15.432811123403926

prior:  -201
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7 V8)
      ((lambda (V6)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V7)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0 19.0))
              (F3 221.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0 -0.0) (F3 168.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-14.106198834735817 -80.21099883473582)|-15.204811123403926

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9) V10)))
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6) (node (F1 V7)) (node (F1 V8)))))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0 19.0))
              (F3 240.0 221.0 217.0))))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.4)))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-inf.0)|-inf.0

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9) V10)))
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6) (node (F1 V7)) (node (F1 V8)))))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0 19.0))
              (F3 240.0 221.0 217.0))))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.4)))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-inf.0 -inf.0)|-inf.0

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9) V10)))
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6) (node (F1 V7)) (node (F1 V8)))))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0 19.0))
              (F3 240.0 221.0 217.0))))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.4)))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-inf.0 -inf.0)|-inf.0

prior:  -201
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        114.25)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-147.73728834735817)|-155.4377274407824

prior:  -201
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        114.25)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-64.32744883473582 -21.529848834735816)|-22.628461123403927

prior:  -201
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        114.25)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-65.65344883473583 -22.855848834735816)|-23.954461123403927

prior:  -201
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6 V8)
      ((lambda (V7)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        106.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 19.0))
              (F3 240.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 -0.0) (F3 217.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-155.73118834735817)|-163.4316274407824

prior:  -201
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6 V8)
      ((lambda (V7)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        106.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 19.0))
              (F3 240.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 -0.0) (F3 217.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-15.439198834735818 -87.80479883473582)|-16.537811123403927

prior:  -201
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6 V8)
      ((lambda (V7)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        106.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 19.0))
              (F3 240.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 -0.0) (F3 217.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-14.218398834735817 -86.58399883473582)|-15.317011123403926

prior:  -201
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7 V8)
      ((lambda (V6)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        114.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0 19.0))
              (F3 221.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0 -0.0) (F3 168.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-157.43518834735815)|-165.13562744078237

prior:  -201
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7 V8)
      ((lambda (V6)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        114.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0 19.0))
              (F3 221.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0 -0.0) (F3 168.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-20.818398834735817 -69.39599883473582)|-21.917011123403928

prior:  -201
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7 V8)
      ((lambda (V6)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        114.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0 19.0))
              (F3 221.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0 -0.0) (F3 168.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-20.655198834735817 -69.23279883473582)|-21.753811123403928

("log-priors and log-likelihoods: "
  ((-201 -168.09764968759026 -369.09764968759026 #f)
    (-204 -166.75764968759023 -370.75764968759023 #t)
    (-201 -170.74004968759027 -371.7400496875903 #f)
    (-201 -170.74004968759027 -371.7400496875903 #f)
    (-201 -195.28644968759025 -396.2864496875902 #f)
    (-201 -202.02064968759026 -403.02064968759026 #f)
    (-201 -208.80644968759023 -409.8064496875902 #f)
    (-198 -inf.0 -inf.0 #f)))
CURRENT DEPTH: 4 SIZE: -201 SEMANTICS PRESERVED: #f  

(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-133.59398834735816)|-141.29442744078239

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-99.53739883473582 -14.346998834735817)|-15.445611123403927

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-14.241398834735817 -103.34859883473581)|-15.340011123403926

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V7)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-133.75958834735818)|-141.4600274407824

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V7)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-62.884598834735826 -16.581398834735815)|-17.680011123403926

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V7)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-16.890998834735818 -63.71739883473582)|-17.98961112340393

prior:  -195
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6) (node (F1 V7)) (node (F1 V8))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.4)))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-inf.0)|-inf.0

prior:  -195
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6) (node (F1 V7)) (node (F1 V8))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.4)))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-inf.0 -inf.0)|-inf.0

prior:  -195
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6) (node (F1 V7)) (node (F1 V8))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.4)))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-inf.0 -inf.0)|-inf.0

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        106.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-156.92318834735815)|-164.62362744078237

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        106.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-83.34319883473582 -15.451998834735818)|-16.55061112340393

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        106.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-14.353598834735818 -85.18239883473582)|-15.452211123403927

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        114.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-173.13638834735815)|-180.83682744078237

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        114.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-29.89219883473582 -39.39699883473581)|-30.990736632776407

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        114.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-31.14339883473582 -40.648198834735815)|-32.2419366327764

("log-priors and log-likelihoods: "
  ((-201 -168.09764968759026 -369.09764968759026 #t)
    (-198 -172.08004968759025 -370.08004968759025 #f)
    (-198 -177.12964968759024 -375.12964968759024 #f)
    (-198 -196.62644968759022 -394.62644968759025 #f)
    (-198 -244.0695007063352 -442.0695007063352 #f)
    (-195 -inf.0 -inf.0 #f)))
CURRENT DEPTH: 3 SIZE: -201 SEMANTICS PRESERVED: #t  

(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-133.59398834735816)|-141.29442744078239

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-14.346998834735817 -99.53739883473582)|-15.445611123403927

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-14.241398834735817 -103.34859883473581)|-15.340011123403926

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V7)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-133.75958834735818)|-141.4600274407824

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V7)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-62.884598834735826 -16.581398834735815)|-17.680011123403926

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V7)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-63.71739883473582 -16.890998834735818)|-17.98961112340393

prior:  -195
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6) (node (F1 V7)) (node (F1 V8))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.4)))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-inf.0)|-inf.0

prior:  -195
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6) (node (F1 V7)) (node (F1 V8))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.4)))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-inf.0 -inf.0)|-inf.0

prior:  -195
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6) (node (F1 V7)) (node (F1 V8))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.4)))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-inf.0 -inf.0)|-inf.0

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        106.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-156.92318834735815)|-164.62362744078237

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        106.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-83.34319883473582 -15.451998834735818)|-16.55061112340393

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        106.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-14.353598834735818 -85.18239883473582)|-15.452211123403927

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        114.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-173.13638834735815)|-180.83682744078237

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        114.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-29.89219883473582 -39.39699883473581)|-30.990736632776407

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        114.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-40.648198834735815 -31.14339883473582)|-32.2419366327764

("log-priors and log-likelihoods: "
  ((-201 -168.09764968759026 -369.09764968759026 #t)
    (-198 -172.08004968759025 -370.08004968759025 #f)
    (-198 -177.12964968759024 -375.12964968759024 #f)
    (-198 -196.62644968759022 -394.62644968759025 #f)
    (-198 -244.0695007063352 -442.0695007063352 #f)
    (-195 -inf.0 -inf.0 #f)))
CURRENT DEPTH: 2 SIZE: -201 SEMANTICS PRESERVED: #t  

(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-133.59398834735816)|-141.29442744078239

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-99.53739883473582 -14.346998834735817)|-15.445611123403927

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-14.241398834735817 -103.34859883473581)|-15.340011123403926

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V7)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-133.75958834735818)|-141.4600274407824

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V7)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098 -1.0986122886681098 -1.0986122886681098 -1.0986122886681098 -1.0986122886681098)|(-62.884598834735826 -16.581398834735815 -16.581398834735815 -62.884598834735826 -16.581398834735815 -62.884598834735826)|-16.581398834735815

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V7)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098 -1.0986122886681098 -1.0986122886681098 -1.0986122886681098 -1.0986122886681098 -1.0986122886681098)|(-16.890998834735818 -63.71739883473582 -16.890998834735818 -63.71739883473582 -63.71739883473582 -16.890998834735818 -16.890998834735818)|-16.603316762284038

prior:  -195
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6) (node (F1 V7)) (node (F1 V8))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.4)))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-inf.0)|-inf.0

prior:  -195
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6) (node (F1 V7)) (node (F1 V8))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.4)))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-inf.0 -inf.0)|-inf.0

prior:  -195
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6) (node (F1 V7)) (node (F1 V8))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.4)))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-inf.0 -inf.0)|-inf.0

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        106.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-156.92318834735815)|-164.62362744078237

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        106.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-15.451998834735818 -83.34319883473582)|-16.55061112340393

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        106.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-85.18239883473582 -14.353598834735818)|-15.452211123403927

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        114.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-173.13638834735815)|-180.83682744078237

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        114.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-39.39699883473581 -29.89219883473582)|-30.990736632776407

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        114.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-31.14339883473582 -40.648198834735815)|-32.2419366327764

("log-priors and log-likelihoods: "
  ((-201 -168.09764968759026 -369.09764968759026 #t)
    (-198 -172.08004968759025 -370.08004968759025 #f)
    (-198 -174.64474303780224 -372.64474303780224 #f)
    (-198 -196.62644968759022 -394.62644968759025 #f)
    (-198 -244.0695007063352 -442.0695007063352 #f)
    (-195 -inf.0 -inf.0 #f)))
CURRENT DEPTH: 1 SIZE: -201 SEMANTICS PRESERVED: #t  

(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-133.59398834735816)|-141.29442744078239

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-14.346998834735817 -99.53739883473582)|-15.445611123403927

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-103.34859883473581 -14.241398834735817)|-15.340011123403926

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V7)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-133.75958834735818)|-141.4600274407824

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V7)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-16.581398834735815 -62.884598834735826)|-17.680011123403926

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        V7)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-63.71739883473582 -16.890998834735818)|-17.98961112340393

prior:  -195
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6) (node (F1 V7)) (node (F1 V8))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.4)))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-inf.0)|-inf.0

prior:  -195
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6) (node (F1 V7)) (node (F1 V8))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.4)))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098 -1.0986122886681098 -1.0986122886681098 -1.0986122886681098 -1.0986122886681098)|(-inf.0 -inf.0 -inf.0 -inf.0 -inf.0 -inf.0)|-inf.0

prior:  -195
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6) (node (F1 V7)) (node (F1 V8))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1)
      ((lambda (V2)
         (data (color (gaussian V1 25)) (size V2)))
        0.4)))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-inf.0 -inf.0)|-inf.0

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        106.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-156.92318834735815)|-164.62362744078237

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        106.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-83.34319883473582 -15.451998834735818)|-16.55061112340393

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6)
      ((lambda (V7)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        106.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0)) (F3 240.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0) (F3 217.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-85.18239883473582 -14.353598834735818)|-15.452211123403927

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        114.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-173.13638834735815)|-180.83682744078237

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        114.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-39.39699883473581 -29.89219883473582)|-30.990736632776407

prior:  -198
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V7)
      ((lambda (V6)
         ((lambda (V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
           V6))
        114.5)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -22.0)) (F3 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 59.0) (F3 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-31.14339883473582 -40.648198834735815)|-32.2419366327764

("log-priors and log-likelihoods: "
  ((-201 -168.09764968759026 -369.09764968759026 #t)
    (-198 -172.08004968759025 -370.08004968759025 #f)
    (-198 -177.12964968759024 -375.12964968759024 #f)
    (-198 -196.62644968759022 -394.62644968759025 #f)
    (-198 -244.0695007063352 -442.0695007063352 #f)
    (-195 -inf.0 -inf.0 #f)))
CURRENT DEPTH: 0 SIZE: -201 SEMANTICS PRESERVED: #t  

(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
prior:  -201
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-133.22518834735817)|-140.9256274407824

prior:  -201
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-89.82219883473581 -12.426198834735818)|-13.524811123403927

prior:  -201
"likelihood for program:"
(let () (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
  (define F3
    (lambda (V6 V7)
      ((lambda (V8)
         (node (F1 V6 0.3) (node (F1 V7 0.3))
           (node (F1 V8 0.3))))
        V6)))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (F4 V3 (F4 V4 V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
              (F3 240.0 221.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-92.88219883473582 -12.548598834735818)|-13.647211123403928

prior:  -207
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6 0.3) (node (F1 V7 0.3))
        (node (F1 V8 0.3)))))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -12.0 -22.0 19.0))
              (F3 240.0 221.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-7.70043909342421)|(-132.03318834735816)|-139.73362744078239

prior:  -207
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6 0.3) (node (F1 V7 0.3))
        (node (F1 V8 0.3)))))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -12.0 -22.0 19.0))
              (F3 240.0 221.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-94.28379883473582 -12.413398834735817)|-13.512011123403926

prior:  -207
"likelihood for program:"
(let ()
  (define F3
    (lambda (V6 V7 V8)
      (node (F1 V6 0.3) (node (F1 V7 0.3))
        (node (F1 V8 0.3)))))
  (define F2
    (lambda (V3 V4)
      ((lambda (V5) (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
        (if (flip 9/11)
            (F2 93.0 125.0)
            (uniform-choice
              (node (F1 47.0 0.1) (F3 -12.0 -22.0 19.0))
              (F3 240.0 221.0 217.0))))))
  (define F1
    (lambda (V1 V2)
      (data (color (gaussian V1 25)) (size V2))))
  (lambda ()
    (uniform-choice (F3 13.0 59.0 -0.0)
      (F3 217.0 168.0 221.0)
      (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
likelihood:(-1.0986122886681098 -1.0986122886681098)|(-12.413398834735817 -94.28379883473582)|-13.512011123403926

("log-priors and log-likelihoods: "
  ((-201 -168.09764968759026 -369.09764968759026 #f)
    (-201 -168.09764968759026 -369.09764968759026 #t)
    (-201 -168.09764968759026 -369.09764968759026 #t)
    (-201 -168.09764968759026 -369.09764968759026 #t)
    (-201 -168.09764968759026 -369.09764968759026 #t)
    (-204 -166.75764968759023 -370.75764968759023 #t)
    (-207 -166.75764968759023 -373.75764968759023 #f)
    (-261 -152.25662288283417 -413.25662288283417 #t)
    (-321 -152.25662288283417 -473.25662288283417 #t)
    (-459 -152.25662288283417 -611.2566228828341 #t)))
("top transformations"
  ((program+
     (program
       ((abstraction F4 (V9 V10) (node (F1 V9 0.1) V10))
         (abstraction F3 (V6 V7)
           ((lambda (V8)
              (node (F1 V6 0.3) (node (F1 V7 0.3))
                (node (F1 V8 0.3))))
             V6))
         (abstraction F2 (V3 V4)
           ((lambda (V5) (F4 V3 (F4 V4 V5)))
             (if (flip 9/11)
                 (F2 93.0 125.0)
                 (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
                   (F3 240.0 221.0)))))
         (abstraction F1 (V1 V2)
           (data (color (gaussian V1 25)) (size V2))))
       (lambda ()
         (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
           (node (F1 21.0 1) (F2 103.0 124.0)
             (F2 131.0 126.0)))))
     -369.09764968759026 -168.09764968759026 -201 #f)
    (program+
      (program
        ((abstraction F4 (V9 V10) (node (F1 V9 0.1) V10))
          (abstraction F3 (V6 V7)
            ((lambda (V8)
               (node (F1 V6 0.3) (node (F1 V7 0.3))
                 (node (F1 V8 0.3))))
              V6))
          (abstraction F2 (V3 V4)
            ((lambda (V5) (F4 V3 (F4 V4 V5)))
              (if (flip 9/11)
                  (F2 93.0 125.0)
                  (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
                    (F3 240.0 221.0)))))
          (abstraction F1 (V1 V2)
            (data (color (gaussian V1 25)) (size V2))))
        (lambda ()
          (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
            (node (F1 21.0 1) (F2 103.0 124.0)
              (F2 131.0 126.0)))))
      -369.09764968759026 -168.09764968759026 -201 #t)
    (program+
      (program
        ((abstraction F4 (V9 V10) (node (F1 V9 0.1) V10))
          (abstraction F3 (V6 V7)
            ((lambda (V8)
               (node (F1 V6 0.3) (node (F1 V7 0.3))
                 (node (F1 V8 0.3))))
              V6))
          (abstraction F2 (V3 V4)
            ((lambda (V5) (F4 V3 (F4 V4 V5)))
              (if (flip 9/11)
                  (F2 93.0 125.0)
                  (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
                    (F3 240.0 221.0)))))
          (abstraction F1 (V1 V2)
            (data (color (gaussian V1 25)) (size V2))))
        (lambda ()
          (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
            (node (F1 21.0 1) (F2 103.0 124.0)
              (F2 131.0 126.0)))))
      -369.09764968759026 -168.09764968759026 -201 #t)
    (program+
      (program
        ((abstraction F4 (V9 V10) (node (F1 V9 0.1) V10))
          (abstraction F3 (V6 V7)
            ((lambda (V8)
               (node (F1 V6 0.3) (node (F1 V7 0.3))
                 (node (F1 V8 0.3))))
              V6))
          (abstraction F2 (V3 V4)
            ((lambda (V5) (F4 V3 (F4 V4 V5)))
              (if (flip 9/11)
                  (F2 93.0 125.0)
                  (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
                    (F3 240.0 221.0)))))
          (abstraction F1 (V1 V2)
            (data (color (gaussian V1 25)) (size V2))))
        (lambda ()
          (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
            (node (F1 21.0 1) (F2 103.0 124.0)
              (F2 131.0 126.0)))))
      -369.09764968759026 -168.09764968759026 -201 #t)
    (program+
      (program
        ((abstraction F4 (V9 V10) (node (F1 V9 0.1) V10))
          (abstraction F3 (V6 V7)
            ((lambda (V8)
               (node (F1 V6 0.3) (node (F1 V7 0.3))
                 (node (F1 V8 0.3))))
              V6))
          (abstraction F2 (V3 V4)
            ((lambda (V5) (F4 V3 (F4 V4 V5)))
              (if (flip 9/11)
                  (F2 93.0 125.0)
                  (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
                    (F3 240.0 221.0)))))
          (abstraction F1 (V1 V2)
            (data (color (gaussian V1 25)) (size V2))))
        (lambda ()
          (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
            (node (F1 21.0 1) (F2 103.0 124.0)
              (F2 131.0 126.0)))))
      -369.09764968759026 -168.09764968759026 -201 #t)
    (program+
      (program
        ((abstraction F4 (V9 V10) (node (F1 V9 0.1) V10))
          (abstraction F3 (V6 V7 V8)
            (node (F1 V6 0.3) (node (F1 V7 0.3))
              (node (F1 V8 0.3))))
          (abstraction F2 (V3 V4)
            ((lambda (V5) (F4 V3 (F4 V4 V5)))
              (if (flip 9/11)
                  (F2 93.0 125.0)
                  (uniform-choice
                    (F4 47.0 (F3 -12.0 -22.0 19.0))
                    (F3 240.0 221.0 217.0)))))
          (abstraction F1 (V1 V2)
            (data (color (gaussian V1 25)) (size V2))))
        (lambda ()
          (uniform-choice (F3 13.0 59.0 -0.0)
            (F3 217.0 168.0 221.0)
            (node (F1 21.0 1) (F2 103.0 124.0)
              (F2 131.0 126.0)))))
      -370.75764968759023 -166.75764968759023 -204 #t)
    (program+
      (program
        ((abstraction F3 (V6 V7 V8)
           (node (F1 V6 0.3) (node (F1 V7 0.3))
             (node (F1 V8 0.3))))
          (abstraction F2 (V3 V4)
            ((lambda (V5)
               (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
              (if (flip 9/11)
                  (F2 93.0 125.0)
                  (uniform-choice
                    (node (F1 47.0 0.1)
                      (F3 -12.0 -22.0 19.0))
                    (F3 240.0 221.0 217.0)))))
          (abstraction F1 (V1 V2)
            (data (color (gaussian V1 25)) (size V2))))
        (lambda ()
          (uniform-choice (F3 13.0 59.0 -0.0)
            (F3 217.0 168.0 221.0)
            (node (F1 21.0 1) (F2 103.0 124.0)
              (F2 131.0 126.0)))))
      -373.75764968759023 -166.75764968759023 -207 #f)
    (program+
      (program
        ((abstraction F3 (V6 V7 V8)
           (node (F1 V6 0.3) (node (F1 V7 0.3))
             (node (F1 V8 0.3))))
          (abstraction F2 (V3 V4 V5)
            (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
          (abstraction F1 (V1 V2)
            (data (color (gaussian V1 25)) (size V2))))
        (lambda ()
          (uniform-choice (F3 13.0 59.0 -0.0)
            (F3 217.0 168.0 221.0)
            (node (F1 21.0 1)
              (F2 103.0 124.0
                (F2 93.0 125.0
                  (F2 84.0 81.0
                    (F2 63.0 82.0
                      (F2 1e2 66.0
                        (node (F1 47.0 0.1)
                          (F3 -12.0 -22.0 19.0)))))))
              (F2 131.0 126.0
                (F2 8e1 140.0
                  (F2 87.0 118.0
                    (F2 81.0 102.0
                      (F2 110.0 133.0
                        (F2 96.0 117.0
                          (F3 240.0 221.0 217.0)))))))))))
      -413.25662288283417 -152.25662288283417 -261 #t)
    (program+
      (program
        ((abstraction F2 (V3 V4 V5)
           (node (F1 V3 0.1) (node (F1 V4 0.1) V5)))
          (abstraction F1 (V1 V2)
            (data (color (gaussian V1 25)) (size V2))))
        (lambda ()
          (uniform-choice
            (node (F1 13.0 0.3) (node (F1 59.0 0.3))
              (node (F1 -0.0 0.3)))
            (node (F1 217.0 0.3) (node (F1 168.0 0.3))
              (node (F1 221.0 0.3)))
            (node (F1 21.0 1)
              (F2 103.0 124.0
                (F2 93.0 125.0
                  (F2 84.0 81.0
                    (F2 63.0 82.0
                      (F2 1e2 66.0
                        (node (F1 47.0 0.1)
                          (node (F1 -12.0 0.3)
                            (node (F1 -22.0 0.3))
                            (node (F1 19.0 0.3)))))))))
              (F2 131.0 126.0
                (F2 8e1 140.0
                  (F2 87.0 118.0
                    (F2 81.0 102.0
                      (F2 110.0 133.0
                        (F2 96.0 117.0
                          (node (F1 240.0 0.3)
                            (node (F1 221.0 0.3))
                            (node (F1 217.0 0.3)))))))))))))
      -473.25662288283417 -152.25662288283417 -321 #t)
    (program+
      (program
        ((abstraction F1 (V1 V2)
           (data (color (gaussian V1 25)) (size V2))))
        (lambda ()
          (uniform-choice
            (node (F1 13.0 0.3) (node (F1 59.0 0.3))
              (node (F1 -0.0 0.3)))
            (node (F1 217.0 0.3) (node (F1 168.0 0.3))
              (node (F1 221.0 0.3)))
            (node (F1 21.0 1)
              (node (F1 103.0 0.1)
                (node (F1 124.0 0.1)
                  (node (F1 93.0 0.1)
                    (node (F1 125.0 0.1)
                      (node (F1 84.0 0.1)
                        (node (F1 81.0 0.1)
                          (node (F1 63.0 0.1)
                            (node (F1 82.0 0.1)
                              (node (F1 1e2 0.1)
                                (node (F1 66.0 0.1)
                                  (node (F1 47.0 0.1)
                                    (node (F1 -12.0 0.3)
                                      (node (F1 -22.0 0.3))
                                      (node (F1 19.0 0.3))))))))))))))
              (node (F1 131.0 0.1)
                (node (F1 126.0 0.1)
                  (node (F1 8e1 0.1)
                    (node (F1 140.0 0.1)
                      (node (F1 87.0 0.1)
                        (node (F1 118.0 0.1)
                          (node (F1 81.0 0.1)
                            (node (F1 102.0 0.1)
                              (node (F1 110.0 0.1)
                                (node (F1 133.0 0.1)
                                  (node (F1 96.0 0.1)
                                    (node (F1 117.0 0.1)
                                      (node (F1 240.0 0.3)
                                        (node (F1 221.0 0.3))
                                        (node (F1 217.0 0.3)))))))))))))))))))
      -611.2566228828341 -152.25662288283417 -459 #t)))
("compressed-program:"
  (let ()
    (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
    (define F3
      (lambda (V6 V7)
        ((lambda (V8)
           (node (F1 V6 0.3) (node (F1 V7 0.3))
             (node (F1 V8 0.3))))
          V6)))
    (define F2
      (lambda (V3 V4)
        ((lambda (V5) (F4 V3 (F4 V4 V5)))
          (if (flip 9/11)
              (F2 93.0 125.0)
              (uniform-choice (F4 47.0 (F3 -12.0 -22.0))
                (F3 240.0 221.0))))))
    (define F1
      (lambda (V1 V2)
        (data (color (gaussian V1 25)) (size V2))))
    (lambda ()
      (uniform-choice (F3 13.0 59.0) (F3 217.0 168.0)
        (node (F1 21.0 1) (F2 103.0 124.0) (F2 131.0 126.0)))))
  "size: " 67)
("desugared program:"
  (let ()
    (define F4 (lambda (V9 V10) (node (F1 V9 0.1) V10)))
    (define F3
      (lambda (V6 V7)
        ((lambda (V8)
           (node (F1 V6 0.3) (node (F1 V7 0.3))
             (node (F1 V8 0.3))))
          V6)))
    (define F2
      (lambda (V3 V4)
        ((lambda (V5) (F4 V3 (F4 V4 V5)))
          (if (flip 9/11)
              (F2 93.0 125.0)
              ((uniform-draw
                 (list
                   (lambda () (F4 47.0 (F3 -12.0 -22.0)))
                   (lambda () (F3 240.0 221.0)))))))))
    (define F1
      (lambda (V1 V2)
        (data (color (gaussian V1 25)) (size V2))))
    (lambda ()
      ((uniform-draw
         (list (lambda () (F3 13.0 59.0))
           (lambda () (F3 217.0 168.0))
           (lambda ()
             (node (F1 21.0 1) (F2 103.0 124.0)
               (F2 131.0 126.0)))))))))
("model output "
  (((data (38.0) (0.3)) ((data (5e1) (0.3)))
     ((data (26.0) (0.3))))
    ((data (221.0) (0.3)) ((data (174.0) (0.3)))
      ((data (192.0) (0.3))))
    ((data (196.0) (0.3)) ((data (217.0) (0.3)))
      ((data (210.0) (0.3))))))
() run-time:154.0 minutes 
#<procedure [char 117916 of /home/ih/bpm/church/experiments/paper.church.ss]>
/tmp/tree-0.292095530893.png
/tmp/tree-1.292095530893.png
/tmp/tree-2.292095530893.png
/tmp/tree-3.292095530893.png
/tmp/tree-4.292095530893.png
/tmp/tree-5.292095530893.png
/tmp/tree-6.292095530893.png
/tmp/tree-7.292095530893.png
/tmp/tree-8.292095530893.png
/tmp/tree-9.292095530893.png
/tmp/tree-10.292095530893.png
/tmp/tree-11.292095530893.png
/tmp/tree-12.292095530893.png
/tmp/tree-13.292095530893.png
/tmp/tree-14.292095530893.png
/tmp/tree-15.292095530893.png
/tmp/tree-16.292095530893.png
/tmp/tree-17.292095530893.png
/tmp/tree-18.292095530893.png
/tmp/tree-19.292095530893.png
